<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wumu&#39;s blog</title>
  
  <subtitle>wumu的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wumuwumu.github.io/"/>
  <updated>2020-09-19T10:09:15.235Z</updated>
  <id>http://wumuwumu.github.io/</id>
  
  <author>
    <name>wumu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos安装nacos</title>
    <link href="http://wumuwumu.github.io/2020/09/19/%E8%BF%90%E7%BB%B4/centos%E5%AE%89%E8%A3%85nacos/"/>
    <id>http://wumuwumu.github.io/2020/09/19/运维/centos安装nacos/</id>
    <published>2020-09-19T10:00:00.000Z</published>
    <updated>2020-09-19T10:09:15.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/alibaba/nacos/releases</span><br><span class="line">https://github.com/alibaba/nacos/releases/download/1.3.2/nacos-server-1.3.2.zip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>centos安装rockermq</title>
    <link href="http://wumuwumu.github.io/2020/09/19/%E8%BF%90%E7%BB%B4/centos%E5%AE%89%E8%A3%85rocketmq/"/>
    <id>http://wumuwumu.github.io/2020/09/19/运维/centos安装rocketmq/</id>
    <published>2020-09-19T10:00:00.000Z</published>
    <updated>2020-09-19T10:14:32.990Z</updated>
    
    <content type="html"><![CDATA[<h6 id="一、安装jdk-1-8"><a href="#一、安装jdk-1-8" class="headerlink" title="一、安装jdk 1.8"></a>一、安装jdk 1.8</h6><ol><li><p>jdk1.8 资源下载</p></li><li><p>上传至服务器目录，解压（以上传至root 目录为例）</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u221-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><ol><li>将解压后的文件夹移动到/usr/local目录下</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv jdk1.8.0_221 /usr/local/</span><br></pre></td></tr></table></figure><ol><li>编辑以下文件，配置java 环境</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><ol><li>具体java 环境配置:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk1.8.0_221</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib/dt.JAVA_HOME/lib/tools.jar:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure><h6 id="此处顺便配置rocketmq-环境"><a href="#此处顺便配置rocketmq-环境" class="headerlink" title="此处顺便配置rocketmq 环境"></a>此处顺便配置rocketmq 环境</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NAMESRV_ADDR=127.0.0.1:9876</span><br></pre></td></tr></table></figure><p>6.刷新文件，使配置立即生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><ol><li>查看是否安装成功</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>8.配置成功,将会看到以下类似信息</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">java</span> <span class="selector-tag">version</span> "1<span class="selector-class">.8</span><span class="selector-class">.0_221</span>"</span><br><span class="line"><span class="selector-tag">Java</span>(<span class="selector-tag">TM</span>) <span class="selector-tag">SE</span> <span class="selector-tag">Runtime</span> <span class="selector-tag">Environment</span> (<span class="selector-tag">build</span> 1<span class="selector-class">.8</span><span class="selector-class">.0_221-b11</span>)</span><br><span class="line"><span class="selector-tag">Java</span> <span class="selector-tag">HotSpot</span>(<span class="selector-tag">TM</span>) 64<span class="selector-tag">-Bit</span> <span class="selector-tag">Server</span> <span class="selector-tag">VM</span> (<span class="selector-tag">build</span> 25<span class="selector-class">.221-b11</span>, <span class="selector-tag">mixed</span> <span class="selector-tag">mode</span>)</span><br></pre></td></tr></table></figure><h6 id="注意：使用openjdk-安装的话在配置rocketMq时候会出现（JAVA-HOME）问题，当时使用了很多方法，都没有成功，最好还是推荐使用这种方式吧。"><a href="#注意：使用openjdk-安装的话在配置rocketMq时候会出现（JAVA-HOME）问题，当时使用了很多方法，都没有成功，最好还是推荐使用这种方式吧。" class="headerlink" title="注意：使用openjdk 安装的话在配置rocketMq时候会出现（JAVA_HOME）问题，当时使用了很多方法，都没有成功，最好还是推荐使用这种方式吧。"></a>注意：使用openjdk 安装的话在配置rocketMq时候会出现（JAVA_HOME）问题，当时使用了很多方法，都没有成功，最好还是推荐使用这种方式吧。</h6><h6 id="二、安装rocketMQ"><a href="#二、安装rocketMQ" class="headerlink" title="二、安装rocketMQ"></a>二、安装rocketMQ</h6><ol><li>直接下载安装包（以4.5.1为例）<br> 官网：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.apache.org%2Fdyn%2Fcloser.cgi%3Fpath%3Drocketmq%2F4.5.1%2Frocketmq-all-4.5.1-bin-release.zip" target="_blank" rel="noopener">https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.5.1/rocketmq-all-4.5.1-bin-release.zip</a> </li></ol><h6 id="注意：不要下载源码包，否则是没有bin目录的"><a href="#注意：不要下载源码包，否则是没有bin目录的" class="headerlink" title="注意：不要下载源码包，否则是没有bin目录的"></a>注意：不要下载源码包，否则是没有bin目录的</h6><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/apache</span><span class="regexp">/rocketmq/</span><span class="number">4.5</span>.<span class="number">1</span>/rocketmq-all-<span class="number">4.5</span>.<span class="number">1</span>-bin-release.zip</span><br></pre></td></tr></table></figure><p>2.解压,将会得到 rocketmq-all-4.5.1-bin-release 文件夹</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">unzip</span> <span class="selector-tag">rocketmq-all-4</span><span class="selector-class">.5</span><span class="selector-class">.1-bin-release</span><span class="selector-class">.zip</span></span><br></pre></td></tr></table></figure><p>3.进入bin 目录 修改配置(分别修改runserver.sh 以及 runbroker.sh，因为默认配置内存过大，可能导致启动失败)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/rocketmq-all-4.5.1-bin-release/bin/</span><br></pre></td></tr></table></figure><ol><li>修改 runserver.sh 文件</li></ol><p>   <img src="https:////upload-images.jianshu.io/upload_images/12596656-c90d7cc4f81e1343.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1141/format/webp" alt="img"></p><p>   修改位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim runbroker.sh</span><br><span class="line"><span class="comment">##使用快捷键 i 开启编辑模式</span></span><br><span class="line"><span class="comment">##找到以下配置，将xms/xmx/xmn 分别修改成以下数值（视机器配置而定）</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">$&#123;JAVA_OPT&#125;</span> -server -Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m"</span></span><br><span class="line"><span class="comment">##保存</span></span><br><span class="line">wq</span><br></pre></td></tr></table></figure><ol><li>修改 runbroker.sh</li></ol><p>   <img src="https:////upload-images.jianshu.io/upload_images/12596656-50cf906fa3423e9d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/604/format/webp" alt="img"></p><p>   修改位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim runbroker.sh</span><br><span class="line"><span class="comment">##使用快捷键 i 开启编辑模式</span></span><br><span class="line"><span class="comment">##具体数值视机器而定</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">$&#123;JAVA_OPT&#125;</span> -server -Xms128m -Xmx256m -Xmn256m"</span></span><br><span class="line"><span class="comment">##保存</span></span><br><span class="line">wq</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">vim</span> <span class="selector-tag">broker</span><span class="selector-class">.conf</span></span><br></pre></td></tr></table></figure><p>新增如下选项</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brokerIP1=xxxxxx(你的服务器公网ip)</span><br></pre></td></tr></table></figure><ol><li>分别后台启动 runserver.sh 以及 runbroker.sh</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##启动runserver</span></span><br><span class="line">nohup sh mqnamesrv &amp;</span><br><span class="line"><span class="comment">##以配置文件启动runbroker</span></span><br><span class="line">nohup sh mqbroker -n localhost:9876 -c /root/rocketmq-all-4.5.1-bin-release/conf/broker.conf &amp;</span><br></pre></td></tr></table></figure><p>7.查看启动是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure><ol><li>启动成功(可以看到NamesrvStartup以及BrokerStartup)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">16065 Jps</span><br><span class="line">9679 NamesrvStartup</span><br><span class="line">7887 jar</span><br><span class="line">11279 BrokerStartup</span><br></pre></td></tr></table></figure><p>10.启动成功日志</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tail -f ~/logs/rocketmqlogs/namesrv.<span class="built_in">log</span></span><br><span class="line">tail -f ~/logs/rocketmqlogs/broker.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>11.如果启动失败，请查看失败日志</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat nohup.<span class="keyword">out</span></span><br></pre></td></tr></table></figure><h6 id="三、关于防火墙以及安全组规则配置"><a href="#三、关于防火墙以及安全组规则配置" class="headerlink" title="三、关于防火墙以及安全组规则配置"></a>三、关于防火墙以及安全组规则配置</h6><p><strong>首先，请在你的云服务器配置安全组规则通道 9876 端口</strong><br> <strong>其次，centos7默认使用firewalld防火墙，而不是iptables，卸载firewalld，再安装iptables</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">##卸载firewalld</span></span><br><span class="line">yum <span class="keyword">remove</span> firewalld</span><br><span class="line"><span class="meta">##安装iptables</span></span><br><span class="line">yum install iptables-services</span><br><span class="line"><span class="meta">##查看防火墙状态</span></span><br><span class="line">service iptables status</span><br><span class="line"><span class="meta">##停止防火墙</span></span><br><span class="line">service iptables stop</span><br></pre></td></tr></table></figure><h6 id="四、SpringBoot整合监视台（rocketmq-externals插件）"><a href="#四、SpringBoot整合监视台（rocketmq-externals插件）" class="headerlink" title="四、SpringBoot整合监视台（rocketmq-externals插件）"></a>四、SpringBoot整合监视台（rocketmq-externals插件）</h6><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fapache%2Frocketmq-externals" target="_blank" rel="noopener">GITHUB地址</a><br> 下载<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fapache%2Frocketmq-externals%2Ftree%2Fmaster%2Frocketmq-console" target="_blank" rel="noopener">rocketmq-console</a>模块即可<br> 修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rocketmq.config.namesrvAddr=你的公网IP:9876</span><br><span class="line">##如果你版本小于3.5.8，下面应该配置为false</span><br><span class="line">rocketmq.config.isVIPChannel=false</span><br></pre></td></tr></table></figure><p>启动即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Description=rockermq name service</span><br><span class="line">Requires=network-online.target</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=anonymous</span><br><span class="line">WorkingDirectory=/opt/rocketmq</span><br><span class="line">ExecStart=/opt/rocketmq/bin/mqnamesrv</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;一、安装jdk-1-8&quot;&gt;&lt;a href=&quot;#一、安装jdk-1-8&quot; class=&quot;headerlink&quot; title=&quot;一、安装jdk 1.8&quot;&gt;&lt;/a&gt;一、安装jdk 1.8&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;jdk1.8 资源下载&lt;/p&gt;
&lt;/li&gt;
&lt;li
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mybatis拦截器</title>
    <link href="http://wumuwumu.github.io/2020/09/19/mybatis/mybaits%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://wumuwumu.github.io/2020/09/19/mybatis/mybaits拦截器/</id>
    <published>2020-09-19T08:00:00.000Z</published>
    <updated>2020-09-19T09:51:18.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h1><h2 id="拦截器注解的规则："><a href="#拦截器注解的规则：" class="headerlink" title="拦截器注解的规则："></a>拦截器注解的规则：</h2><p>具体规则如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">Intercepts</span>(&#123;</span><br><span class="line">    @<span class="keyword">Signature</span>(<span class="keyword">type</span> = StatementHandler.class, method = <span class="string">"query"</span>, args = &#123;<span class="selector-tag">Statement</span><span class="selector-class">.class</span>, <span class="selector-tag">ResultHandler</span><span class="selector-class">.class</span>&#125;),</span><br><span class="line">    @<span class="keyword">Signature</span>(<span class="keyword">type</span> = StatementHandler.class, method = <span class="string">"update"</span>, args = &#123;<span class="selector-tag">Statement</span><span class="selector-class">.class</span>&#125;),</span><br><span class="line">    @<span class="keyword">Signature</span>(<span class="keyword">type</span> = StatementHandler.class, method = <span class="string">"batch"</span>, args = &#123;<span class="selector-tag">Statement</span><span class="selector-class">.class</span>&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li>@Intercepts：标识该类是一个拦截器；</li><li>@Signature：指明自定义拦截器需要拦截哪一个类型，哪一个方法；<br> 2.1 type：对应四种类型中的一种；<br> 2.2 method：对应接口中的哪类方法（因为可能存在重载方法）；<br> 2.3 args：对应哪一个方法；</li></ol><blockquote><p><strong>5. 拦截器可拦截的方法：</strong></p></blockquote><table><thead><tr><th>拦截的类</th><th>拦截的方法</th></tr></thead><tbody><tr><td>Executor</td><td>update, query, flushStatements, commit, rollback,getTransaction, close, isClosed</td></tr><tr><td>ParameterHandler</td><td>getParameterObject, setParameters</td></tr><tr><td>StatementHandler</td><td>prepare, parameterize, batch, update, query</td></tr><tr><td>ResultSetHandler</td><td>handleResultSets, handleOutputParameters</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Intercepts</span>(&#123;<span class="meta">@Signature</span>(type = Executor.class, method = <span class="string">"query"</span>,</span><br><span class="line">        args = &#123;MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class&#125;)&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">     Object target = invocation.getTarget(); <span class="comment">//被代理对象</span></span><br><span class="line">     Method method = invocation.getMethod(); <span class="comment">//代理方法</span></span><br><span class="line">     Object[] args = invocation.getArgs(); <span class="comment">//方法参数</span></span><br><span class="line">     <span class="comment">// do something ...... 方法拦截前执行代码块</span></span><br><span class="line">     Object result = invocation.proceed();</span><br><span class="line">     <span class="comment">// do something .......方法拦截后执行代码块</span></span><br><span class="line">     <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> Object <span class="title">plugin</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> Plugin.wrap(target, <span class="keyword">this</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="setProperties方法"><a href="#setProperties方法" class="headerlink" title="setProperties方法"></a>setProperties方法</h2><p>如果我们的拦截器需要一些变量对象，而且这个对象是支持可配置的。<br> 类似于Spring中的@Value(“${}”)从<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fapplication.properties" target="_blank" rel="noopener">application.properties</a>文件中获取。<br> 使用方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">"com.plugin.mybatis.MyInterceptor"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"xxx"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"xxx"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="plugin方法"><a href="#plugin方法" class="headerlink" title="plugin方法"></a>plugin方法</h2><p>这个方法的作用是就是让mybatis判断，是否要进行拦截，然后做出决定是否生成一个代理。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Object plugin(Object target) &#123;</span><br><span class="line">    <span class="keyword">if</span> (target instanceof StatementHandler) &#123;</span><br><span class="line">        <span class="keyword">return</span> Plugin.wrap(target, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> target;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>需要注意的是：每经过一个拦截器对象都会调用插件的plugin方法，也就是说，该方法会调用4次。根据@Intercepts注解来决定是否进行拦截处理。</strong></p><blockquote><p>问题1：<strong>Plugin.wrap(target, this)</strong>方法的作用？</p></blockquote><p>解答：判断是否拦截这个类型对象（根据@Intercepts注解决定），然后决定是返回一个代理对象还是返回原对象。</p><p>故我们在实现plugin方法时，要判断一下目标类型，是本插件要拦截的对象时才执行Plugin.wrap方法，否则的话，直接返回目标本身。</p><blockquote><p>问题2：拦截器代理对象可能经过多层代理，如何获取到真实的拦截器对象？</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 获得真正的处理对象,可能多层代理.</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">public <span class="keyword">static</span> &lt;T&gt; T realTarget(<span class="built_in">Object</span> target) &#123;</span><br><span class="line">    <span class="keyword">if</span> (Proxy.isProxyClass(target.getClass())) &#123;</span><br><span class="line">        MetaObject metaObject = SystemMetaObject.forObject(target);</span><br><span class="line">        <span class="keyword">return</span> realTarget(metaObject.getValue(<span class="string">"h.target"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (T) target;</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"top/sciento/wumu/jdbc/mybatis/db.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">"top.sciento.wumu.jdbc.mybatis.plugin.ExamplePlugin"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">"top.sciento.wumu.jdbc.mybatis.plugin.PagePlugin"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"top.sciento.wumu.jdbc.mybatis.mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Intercepts</span>(&#123;<span class="meta">@Signature</span>(</span><br><span class="line">        type= Executor.class,</span><br><span class="line">        method = <span class="string">"update"</span>,</span><br><span class="line">        args = &#123;MappedStatement.class,Object.class&#125;)&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExamplePlugin</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"被拦截方法执行之前，做的辅助服务······"</span>);</span><br><span class="line">        Object[] args = invocation.getArgs();</span><br><span class="line">        Method method = invocation.getMethod();</span><br><span class="line">        Object target  = invocation.getTarget();</span><br><span class="line">        MappedStatement mappedStatement = (MappedStatement) args[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        Object proceed = invocation.proceed();</span><br><span class="line">        System.out.println(<span class="string">"被拦截方法执行之后，做的辅助服务······"</span>);</span><br><span class="line">        <span class="keyword">return</span> proceed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">plugin</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Plugin.wrap(target, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProperties</span><span class="params">(Properties properties)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Intercepts</span>(</span><br><span class="line">        <span class="meta">@Signature</span>(type = Executor.class, method = <span class="string">"query"</span>, args = &#123;MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class&#125;)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PagePlugin</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Object[] args = invocation.getArgs();</span><br><span class="line">        MappedStatement mappedStatement = (MappedStatement) args[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取参数</span></span><br><span class="line">        Object param = invocation.getArgs()[<span class="number">1</span>];</span><br><span class="line">        BoundSql boundSql = mappedStatement.getBoundSql(param);</span><br><span class="line">        Object parameterObject = boundSql.getParameterObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 判断是否是继承PageVo来判断是否需要进行分页</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (parameterObject <span class="keyword">instanceof</span> Page) &#123;</span><br><span class="line">            <span class="comment">//强转 为了拿到分页数据</span></span><br><span class="line">            Page pagevo = (Page) param;</span><br><span class="line">            String sql = boundSql.getSql();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取相关配置</span></span><br><span class="line">            Configuration config = mappedStatement.getConfiguration();</span><br><span class="line">            Connection connection = config.getEnvironment().getDataSource().getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//拼接查询当前条件的sql的总条数</span></span><br><span class="line">            String countSql = <span class="string">"select count(*) from ("</span> + sql + <span class="string">") a"</span>;</span><br><span class="line">            PreparedStatement preparedStatement = connection.prepareStatement(countSql);</span><br><span class="line">            BoundSql countBoundSql = <span class="keyword">new</span> BoundSql(config, countSql, boundSql.getParameterMappings(), boundSql.getParameterObject());</span><br><span class="line">            ParameterHandler parameterHandler = <span class="keyword">new</span> DefaultParameterHandler(mappedStatement, parameterObject, countBoundSql);</span><br><span class="line">            parameterHandler.setParameters(preparedStatement);</span><br><span class="line">            <span class="comment">//执行获得总条数</span></span><br><span class="line">            ResultSet rs = preparedStatement.executeQuery();</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">                count = rs.getInt(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//拼接分页sql</span></span><br><span class="line">            String pageSql = sql + <span class="string">" limit "</span> + pagevo.getOffset() + <span class="string">" , "</span> + pagevo.getSize();</span><br><span class="line">            <span class="comment">//重新执行新的sql</span></span><br><span class="line">            doNewSql(invocation, pageSql);</span><br><span class="line"></span><br><span class="line">            Object result = invocation.proceed();</span><br><span class="line">            connection.close();</span><br><span class="line">            <span class="comment">// 这是使用了两种不同的方式返回最终的结果</span></span><br><span class="line">            pagevo.setList((List)result);</span><br><span class="line">            pagevo.setTotal(count);</span><br><span class="line">            <span class="comment">//处理新的结构</span></span><br><span class="line">            PageResult&lt;?&gt; pageResult = <span class="keyword">new</span> PageResult&lt;List&gt;((List) result,pagevo.getPage(), pagevo.getSize(), count );</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;PageResult&gt;()&#123;&#123;add(pageResult);&#125;&#125; ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> invocation.proceed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doNewSql</span><span class="params">(Invocation invocation, String sql)</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Object[] args = invocation.getArgs();</span><br><span class="line">        MappedStatement statement = (MappedStatement) args[<span class="number">0</span>];</span><br><span class="line">        Object parameterObject = args[<span class="number">1</span>];</span><br><span class="line">        BoundSql boundSql = statement.getBoundSql(parameterObject);</span><br><span class="line">        MappedStatement newStatement = newMappedStatement(statement, <span class="keyword">new</span> BoundSqlSqlSource(boundSql));</span><br><span class="line">        MetaObject msObject = MetaObject.forObject(newStatement, <span class="keyword">new</span> DefaultObjectFactory(), <span class="keyword">new</span> DefaultObjectWrapperFactory(), <span class="keyword">new</span> DefaultReflectorFactory());</span><br><span class="line">        msObject.setValue(<span class="string">"sqlSource.boundSql.sql"</span>, sql);</span><br><span class="line">        args[<span class="number">0</span>] = newStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> MappedStatement <span class="title">newMappedStatement</span><span class="params">(MappedStatement ms, SqlSource newSqlSource)</span> </span>&#123;</span><br><span class="line">        MappedStatement.Builder builder =</span><br><span class="line">                <span class="keyword">new</span> MappedStatement.Builder(ms.getConfiguration(), ms.getId(), newSqlSource, ms.getSqlCommandType());</span><br><span class="line">        builder.resource(ms.getResource());</span><br><span class="line">        builder.fetchSize(ms.getFetchSize());</span><br><span class="line">        builder.statementType(ms.getStatementType());</span><br><span class="line">        builder.keyGenerator(ms.getKeyGenerator());</span><br><span class="line">        <span class="keyword">if</span> (ms.getKeyProperties() != <span class="keyword">null</span> &amp;&amp; ms.getKeyProperties().length != <span class="number">0</span>) &#123;</span><br><span class="line">            StringBuilder keyProperties = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (String keyProperty : ms.getKeyProperties()) &#123;</span><br><span class="line">                keyProperties.append(keyProperty).append(<span class="string">","</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            keyProperties.delete(keyProperties.length() - <span class="number">1</span>, keyProperties.length());</span><br><span class="line">            builder.keyProperty(keyProperties.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        builder.timeout(ms.getTimeout());</span><br><span class="line">        builder.parameterMap(ms.getParameterMap());</span><br><span class="line">        builder.resultMaps(ms.getResultMaps());</span><br><span class="line">        builder.resultSetType(ms.getResultSetType());</span><br><span class="line">        builder.cache(ms.getCache());</span><br><span class="line">        builder.flushCacheRequired(ms.isFlushCacheRequired());</span><br><span class="line">        builder.useCache(ms.isUseCache());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新的SqlSource需要实现</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BoundSqlSqlSource</span> <span class="keyword">implements</span> <span class="title">SqlSource</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> BoundSql boundSql;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BoundSqlSqlSource</span><span class="params">(BoundSql boundSql)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.boundSql = boundSql;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> BoundSql <span class="title">getBoundSql</span><span class="params">(Object parameterObject)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> boundSql;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本知识&quot;&gt;&lt;a href=&quot;#基本知识&quot; class=&quot;headerlink&quot; title=&quot;基本知识&quot;&gt;&lt;/a&gt;基本知识&lt;/h1&gt;&lt;h2 id=&quot;拦截器注解的规则：&quot;&gt;&lt;a href=&quot;#拦截器注解的规则：&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mybatis入门</title>
    <link href="http://wumuwumu.github.io/2020/09/19/mybatis/mybatis%E5%85%A5%E9%97%A8/"/>
    <id>http://wumuwumu.github.io/2020/09/19/mybatis/mybatis入门/</id>
    <published>2020-09-19T06:00:00.000Z</published>
    <updated>2020-09-19T09:12:46.857Z</updated>
    
    <content type="html"><![CDATA[<h1 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>x.x.x<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.44<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h1><p>mybatis-config.xml</p><p>配置文件的标签顺序不能打乱，不然会报错。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"top/sciento/wumu/jdbc/mybatis/db.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"top.sciento.wumu.jdbc.mybatis.mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>db.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">driver=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql://:3306/test</span><br><span class="line">username=</span><br><span class="line">password=</span><br></pre></td></tr></table></figure><h1 id="编写执行文件"><a href="#编写执行文件" class="headerlink" title="编写执行文件"></a>编写执行文件</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> top.sciento.wumu.jdbc.mybatis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> top.sciento.wumu.jdbc.mybatis.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.sciento.wumu.jdbc.mybatis.mapper.UserMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(MybatisRunner.class.getResource(<span class="string">""</span>));</span><br><span class="line">        InputStream reader = MybatisRunner.class.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">        SqlSessionFactory sessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(reader);</span><br><span class="line">        Configuration configuration  = sessionFactory.getConfiguration();</span><br><span class="line">        <span class="comment">// 默认是不会提交的，需要手动提交</span></span><br><span class="line">        SqlSession sqlSession = sessionFactory.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectList();</span><br><span class="line">        System.out.println(userList);</span><br><span class="line">        User user  = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">"wumu"</span>);</span><br><span class="line">        user.setAge(<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">int</span> id = userMapper.insert(user);</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">list</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SelectProvider</span>(value = UserSqlBuilder.class,method = <span class="string">"selectList"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">selectList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里使用动态sql</span></span><br><span class="line">    <span class="meta">@InsertProvider</span>(value = UserSqlBuilder.class,method = <span class="string">"insert"</span>)</span><br><span class="line"><span class="comment">//    @Options(useGeneratedKeys = true, keyProperty = "id", keyColumn = "id")</span></span><br><span class="line">    <span class="meta">@SelectKey</span>(statement = <span class="string">"select last_insert_id()"</span>, keyProperty = <span class="string">"id"</span>, before = <span class="keyword">false</span>, resultType = <span class="keyword">int</span>.class)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(User user)</span></span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserSqlBuilder</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">selectList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SQL().SELECT(<span class="string">"id"</span>,<span class="string">"name"</span>,<span class="string">"age"</span>).FROM(<span class="string">"base_user"</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">insert</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line"><span class="comment">//        return new SQL().INSERT_INTO("base_user").INTO_COLUMNS("name","age")</span></span><br><span class="line"><span class="comment">//                .INTO_VALUES(user.getName(),String.valueOf(user.getAge())).toString();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SQL().INSERT_INTO(<span class="string">"base_user"</span>).VALUES(<span class="string">"name"</span>,<span class="string">"#&#123;name&#125;"</span>)</span><br><span class="line">                .VALUES(<span class="string">"age"</span>,<span class="string">"#&#123;age&#125;"</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- namespace属性是名称空间，必须唯一 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"top.sciento.wumu.jdbc.mybatis.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- resultMap标签:映射实体与表</span></span><br><span class="line"><span class="comment">         type属性：表示实体全路径名</span></span><br><span class="line"><span class="comment">         id属性：为实体与表的映射取一个任意的唯一的名字</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"top.sciento.wumu.jdbc.mybatis.entity.User"</span> <span class="attr">id</span>=<span class="string">"UserMap"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- id标签:映射主键属性</span></span><br><span class="line"><span class="comment">             result标签：映射非主键属性</span></span><br><span class="line"><span class="comment">             property属性:实体的属性名</span></span><br><span class="line"><span class="comment">             column属性：表的字段名</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"age"</span> <span class="attr">column</span>=<span class="string">"age"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"list"</span> <span class="attr">resultMap</span>=<span class="string">"UserMap"</span>&gt;</span></span><br><span class="line">        select * from base_user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="知识分析"><a href="#知识分析" class="headerlink" title="知识分析"></a>知识分析</h1><h2 id="返回主键"><a href="#返回主键" class="headerlink" title="返回主键"></a>返回主键</h2><p>1、使用options</p><p>options可以配置sql的大部分属性，对应着我们标签<code>&lt;select&gt;</code>上写的相关属性。</p><table><thead><tr><th>–</th><th>–</th><th></th><th>描述</th></tr></thead><tbody><tr><td><code>@Options</code></td><td><code>方法</code></td><td>映射语句的属性</td><td>该注解允许你指定大部分开关和配置选项，它们通常在映射语句上作为属性出现。与在注解上提供大量的属性相比，<code>Options</code> 注解提供了一致、清晰的方式来指定选项。属性：<code>useCache=true</code>、<code>flushCache=FlushCachePolicy.DEFAULT</code>、<code>resultSetType=DEFAULT</code>、<code>statementType=PREPARED</code>、<code>fetchSize=-1</code>、<code>timeout=-1</code>、<code>useGeneratedKeys=false</code>、<code>keyProperty=&quot;&quot;</code>、<code>keyColumn=&quot;&quot;</code>、<code>resultSets=&quot;&quot;</code>, <code>databaseId=&quot;&quot;</code>。注意，Java 注解无法指定 <code>null</code> 值。因此，一旦你使用了 <code>Options</code> 注解，你的语句就会被上述属性的默认值所影响。要注意避免默认值带来的非预期行为。 The <code>databaseId</code>(Available since 3.5.5), in case there is a configured <code>DatabaseIdProvider</code>, the MyBatis use the <code>Options</code> with no <code>databaseId</code> attribute or with a <code>databaseId</code> that matches the current one. If found with and without the <code>databaseId</code> the latter will be discarded.         注意：<code>keyColumn</code> 属性只在某些数据库中有效（如 Oracle、PostgreSQL 等）。要了解更多关于 <code>keyColumn</code> 和 <code>keyProperty</code> 可选值信息，请查看“insert, update 和 delete”一节。</td></tr></tbody></table><p>2、使用SelectKey</p><p>对应着SelectKey标签</p><table><thead><tr><th>–</th><th>–</th><th>–</th><th>-</th></tr></thead><tbody><tr><td><code>@SelectKey</code></td><td><code>方法</code></td><td><code>&lt;selectKey&gt;</code></td><td>这个注解的功能与 <code>&lt;selectKey&gt;</code> 标签完全一致。该注解只能在 <code>@Insert</code> 或 <code>@InsertProvider</code> 或 <code>@Update</code> 或 <code>@UpdateProvider</code> 标注的方法上使用，否则将会被忽略。如果标注了 <code>@SelectKey</code> 注解，MyBatis 将会忽略掉由 <code>@Options</code> 注解所设置的生成主键或设置（configuration）属性。属性：<code>statement</code> 以字符串数组形式指定将会被执行的 SQL 语句，<code>keyProperty</code> 指定作为参数传入的对象对应属性的名称，该属性将会更新成新的值，<code>before</code> 可以指定为 <code>true</code> 或 <code>false</code> 以指明 SQL 语句应被在插入语句的之前还是之后执行。<code>resultType</code> 则指定 <code>keyProperty</code> 的 Java 类型。<code>statementType</code> 则用于选择语句类型，可以选择 <code>STATEMENT</code>、<code>PREPARED</code> 或 <code>CALLABLE</code> 之一，它们分别对应于 <code>Statement</code>、<code>PreparedStatement</code> 和 <code>CallableStatement</code>。默认值是 <code>PREPARED</code>。 The <code>databaseId</code>(Available since 3.5.5), in case there is a configured <code>DatabaseIdProvider</code>, the MyBatis will use a statement with no <code>databaseId</code> attribute or with a <code>databaseId</code> that matches the current one. If found with and without the <code>databaseId</code> the latter will be discarded.</td></tr></tbody></table><p>描述：</p><p>@SelctKey(statement=”SQL语句”,keyProperty=”将SQL语句查询结果存放到keyProperty中去”,before=”true表示先查询再插入，false反之”,resultType=int.class)<br>其中：</p><ul><li>statement是要运行的SQL语句，它的返回值通过resultType来指定</li><li>before表示查询语句statement运行的时机</li><li>keyProperty表示查询结果赋值给代码中的哪个对象，keyColumn表示将查询结果赋值给数据库表中哪一列</li><li>keyProperty和keyColumn都不是必需的，有没有都可以</li><li>before=true，插入之前进行查询，可以将查询结果赋给keyProperty和keyColumn，赋给keyColumn相当于更改数据库</li><li>befaore=false，先插入，再查询，这时只能将结果赋给keyProperty</li><li>赋值给keyProperty用来“读”数据库，赋值给keyColumn用来写数据库</li><li>selectKey的两大作用：1、生成主键；2、获取刚刚插入数据的主键。</li><li>使用selectKey，并且使用MySQL的last_insert_id()函数时，before必为false，也就是说必须先插入然后执行last_insert_id()才能获得刚刚插入数据的ID。</li></ul><h2 id="maven打包xml文件"><a href="#maven打包xml文件" class="headerlink" title="maven打包xml文件"></a>maven打包xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h1&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wumuwumu.github.io/2020/09/18/%E8%BF%90%E7%BB%B4/systemd%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF/"/>
    <id>http://wumuwumu.github.io/2020/09/18/运维/systemd文件模板/</id>
    <published>2020-09-18T08:31:36.040Z</published>
    <updated>2020-09-18T08:32:01.418Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Description=My Miscellaneous Service</span><br><span class="line">Requires=network-online.target</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=anonymous</span><br><span class="line">WorkingDirectory=/home/anonymous</span><br><span class="line">ExecStart=some_can_execute --option=123</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>centos8安装mysql</title>
    <link href="http://wumuwumu.github.io/2020/09/17/mysql/centos8%E5%AE%89%E8%A3%85mysql/"/>
    <id>http://wumuwumu.github.io/2020/09/17/mysql/centos8安装mysql/</id>
    <published>2020-09-17T08:55:17.000Z</published>
    <updated>2020-09-17T10:33:45.736Z</updated>
    
    <content type="html"><![CDATA[<p>以root身份或<a href="https://www.myfreax.com/create-a-sudo-user-on-centos/" target="_blank" rel="noopener">具有sudo特权的用户身份使用CentOS软件包管理器安装MySQL 8.0服务器</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install @mysql</span><br></pre></td></tr></table></figure><p><code>@mysql</code>模块安装MySQL及其所有依赖项。</p><p>安装完成后，通过运行以下命令来启动MySQL服务并使其在启动时自动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now mysqld</span><br></pre></td></tr></table></figure><p>要检查MySQL服务器是否正在运行，请输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mysqld</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">● mysqld.service - MySQL 8.0 database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Thu 2019-10-17 22:09:39 UTC; 15s ago</span><br><span class="line">   ...</span><br></pre></td></tr></table></figure><h2 id="保护MySQL"><a href="#保护MySQL" class="headerlink" title="保护MySQL"></a>保护MySQL</h2><p>运行<code>mysql_secure_installation</code>脚本，该脚本执行一些与安全性相关的操作并设置MySQL根密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure><p>将要求您配置<a href="https://dev.mysql.com/doc/refman/8.0/en/validate-password.html" target="_blank" rel="noopener"> <code>VALIDATE PASSWORD PLUGIN</code> </a>，该工具用于测试MySQL用户密码的强度并提高安全性。密码验证策略分为三个级别：低，中和强。如果您不想设置验证密码插件，请按<code>ENTER</code>。</p><p>在下一个提示符下，将要求您为MySQL根用户设置密码。完成此操作后，脚本还将要求您删除匿名用户，限制root用户对本地计算机的访问，并删除测试数据库。您应该对所有问题回答“是”。</p><p>要从命令行与MySQL服务器进行交互，请使用MySQL客户端实用程序，它作为依赖项安装。通过键入以下内容测试根访问权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>出现提示时输入<a href="https://www.myfreax.com/how-to-reset-a-mysql-root-password/" target="_blank" rel="noopener"> root密码</a>，将为您提供MySQL shell，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 12</span><br><span class="line">Server version: 8.0.17 Source distribution</span><br></pre></td></tr></table></figure><p>就是这样！您已经在CentOS服务器上安装并保护了MySQL 8.0，并准备使用它。</p><h2 id="身份验证方法"><a href="#身份验证方法" class="headerlink" title="身份验证方法"></a>身份验证方法</h2><p>由于CentOS 8中的某些客户端工具和库与<code>caching_sha2_password</code>方法不兼容，CentOS 8存储库中包含的MySQL 8.0服务器被设置为使用旧的<code>mysql_native_password</code>身份验证插件。上游MySQL 8.0版本。</p><p><code>mysql_native_password</code>方法适用于大多数设置。但是，如果您想将默认身份验证插件更改为<code>caching_sha2_password</code>，这会更快并提供更好的安全性，请打开以下配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/my.cnf.d/mysql-default-authentication-plugin.cnf</span><br></pre></td></tr></table></figure><p>将<code>default_authentication_plugin</code>的值更改为<code>caching_sha2_password</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">default_authentication_plugin=caching_sha2_password</span><br></pre></td></tr></table></figure><p><a href="https://www.myfreax.com/how-to-save-file-in-vim-quit-editor/" target="_blank" rel="noopener">关闭并保存文件</a>，然后重新启动MySQL服务器以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart mysqld</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以root身份或&lt;a href=&quot;https://www.myfreax.com/create-a-sudo-user-on-centos/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;具有sudo特权的用户身份使用CentOS软件包管理器安装MySQL
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://wumuwumu.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>postgresql账号管理</title>
    <link href="http://wumuwumu.github.io/2020/09/16/postgresql/postgresql%E8%B4%A6%E5%8F%B7%E7%AE%A1%E7%90%86/"/>
    <id>http://wumuwumu.github.io/2020/09/16/postgresql/postgresql账号管理/</id>
    <published>2020-09-16T10:37:46.000Z</published>
    <updated>2020-09-17T09:49:21.558Z</updated>
    
    <content type="html"><![CDATA[<p><strong>注意：</strong>创建好用户（角色）之后需要连接的话，还需要修改2个权限控制的配置文件（pg_hba.conf、pg_ident.conf）。并且创建用户（user）和创建角色（role）一样，唯一的区别是用户默认可以登录，而创建的角色默认不能登录。创建用户和角色的各个参数选项是一样的。</p><p><strong>Tip：安装PostgreSQL会自动创建一个postgres用户，需要切换到该用户下访问PostgreSQL。</strong></p><ul><li><p><a href="https://www.postgresql.org/docs/11/sql-createuser.html" target="_blank" rel="noopener">创建用户/角色</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER/ROLE name [ [ WITH ] option [ ... ] ]  : 关键词 USER,ROLE； name 用户或角色名； </span><br><span class="line"></span><br><span class="line">where option can be:</span><br><span class="line"></span><br><span class="line">      SUPERUSER | NOSUPERUSER      :超级权限，拥有所有权限，默认nosuperuser。</span><br><span class="line">    | CREATEDB | NOCREATEDB        :建库权限，默认nocreatedb。</span><br><span class="line">    | CREATEROLE | NOCREATEROLE    :建角色权限，拥有创建、修改、删除角色，默认nocreaterole。</span><br><span class="line">    | INHERIT | NOINHERIT          :继承权限，可以把除superuser权限继承给其他用户/角色，默认inherit。</span><br><span class="line">    | LOGIN | NOLOGIN              :登录权限，作为连接的用户，默认nologin，除非是create user（默认登录）。</span><br><span class="line">    | REPLICATION | NOREPLICATION  :复制权限，用于物理或则逻辑复制（复制和删除slots），默认是noreplication。</span><br><span class="line">    | BYPASSRLS | NOBYPASSRLS      :安全策略RLS权限，默认nobypassrls。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">| CONNECTION LIMIT connlimit   :限制用户并发数，默认-1，不限制。正常连接会受限制，后台连接和prepared事务不受限制。</span><br><span class="line">| [ ENCRYPTED ] PASSWORD &apos;password&apos; | PASSWORD NULL :设置密码，密码仅用于有login属性的用户，不使用密码身份验证，则可以省略此选项。可以选择将空密码显式写为PASSWORD NULL。</span><br><span class="line">                                                     加密方法由配置参数password_encryption确定，密码始终以加密方式存储在系统目录中。</span><br><span class="line">| VALID UNTIL &apos;timestamp&apos;      :密码有效期时间，不设置则用不失效。</span><br><span class="line">| IN ROLE role_name [, ...]    :新角色将立即添加为新成员。</span><br><span class="line">| IN GROUP role_name [, ...]   :同上</span><br><span class="line">| ROLE role_name [, ...]       :ROLE子句列出一个或多个现有角色，这些角色自动添加为新角色的成员。 （这实际上使新角色成为“组”）。</span><br><span class="line">| ADMIN role_name [, ...]      :与ROLE类似，但命名角色将添加到新角色WITH ADMIN OPTION，使他们有权将此角色的成员资格授予其他人。</span><br><span class="line">| USER role_name [, ...]       :同上</span><br><span class="line">| SYSID uid                    :被忽略，但是为向后兼容性而存在。</span><br></pre></td></tr></table></figure></li></ul><p>​      <strong>示例：</strong></p><ol><li><p>创建不需要密码登陆的用户zjy：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# CREATE ROLE zjy LOGIN;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure><p>创建该用户后，还不能直接登录。需要修改 <strong>pg_hba.conf</strong> 文件（后面会对该文件进行说明），加入：</p><p>①：本地登陆：local   all    all    <strong>trust</strong>②：远程登陆：host   all    all    192.168.163.132/32     <strong>trust</strong></p></li><li><p>创建需要密码登陆的用户zjy1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# CREATE USER zjy1 WITH PASSWORD &apos;zjy1&apos;;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure><p>和ROLE的区别是：USER带LOGIN属性。也需要修改 <strong>pg_hba.conf</strong> 文件（后面会对该文件进行说明），加入：<br>host    all     all     192.168.163.132/32    <strong>md5</strong></p></li><li><p>创建有时间限制的用户zjy2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# CREATE ROLE zjy2 WITH LOGIN PASSWORD &apos;zjy2&apos; VALID UNTIL &apos;2019-05-30&apos;;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure><p>和2的处理方法一样，修改 <strong>pg_hba.conf</strong> 文件，该用户会的密码在给定的时间之后过期不可用。</p></li><li><p>创建有创建数据库和管理角色权限的用户admin：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# CREATE ROLE admin WITH CREATEDB CREATEROLE;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure><p>注意：拥有创建数据库，角色的用户，也可以删除和修改这些对象。</p></li><li><p>创建具有超级权限的用户：admin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# CREATE ROLE admin WITH SUPERUSER LOGIN PASSWORD &apos;admin&apos;;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure></li><li><p>创建复制账号：repl </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# CREATE USER repl REPLICATION LOGIN ENCRYPTED PASSWORD &apos;repl&apos;;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure></li><li><p>其他说明</p></li></ol><ol start="8"><li></li></ol><ul><li><a href="https://www.postgresql.org/docs/11/sql-grant.html" target="_blank" rel="noopener">授权，定义访问权限</a></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">GRANT &#123; &#123; SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER &#125;</span><br><span class="line">    [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON &#123; [ TABLE ] table_name [, ...]</span><br><span class="line">         | ALL TABLES IN SCHEMA schema_name [, ...] &#125;</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">##单表授权：授权zjy账号可以访问schema为zjy的zjy表</span><br><span class="line">grant select,insert,update,delete on zjy.zjy to zjy;</span><br><span class="line">##所有表授权：</span><br><span class="line">grant select,insert,update,delete on all tables in schema zjy to zjy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GRANT &#123; &#123; SELECT | INSERT | UPDATE | REFERENCES &#125; ( column_name [, ...] )</span><br><span class="line">    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) &#125;</span><br><span class="line">    ON [ TABLE ] table_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">##列授权，授权指定列(zjy schema下的zjy表的name列)的更新权限给zjy用户</span><br><span class="line">grant update (name) on zjy.zjy to zjy;</span><br><span class="line">##指定列授不同权限，zjy schema下的zjy表，查看更新name、age字段，插入name字段</span><br><span class="line">grant select (name,age),update (name,age),insert(name) on zjy.xxx to zjy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GRANT &#123; &#123; USAGE | SELECT | UPDATE &#125;</span><br><span class="line">    [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON &#123; SEQUENCE sequence_name [, ...]</span><br><span class="line">         | ALL SEQUENCES IN SCHEMA schema_name [, ...] &#125;</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">##序列（自增键）属性授权，指定zjy schema下的seq_id_seq 给zjy用户</span><br><span class="line">grant select,update on sequence zjy.seq_id_seq to zjy;</span><br><span class="line">##序列（自增键）属性授权，给用户zjy授权zjy schema下的所有序列</span><br><span class="line">grant select,update on all sequences in schema zjy to zjy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GRANT &#123; &#123; CREATE | CONNECT | TEMPORARY | TEMP &#125; [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON DATABASE database_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">##连接数据库权限，授权cc用户连接数据库zjy</span><br><span class="line">grant connect on database zjy to cc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GRANT &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON DOMAIN domain_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">##</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GRANT &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON FOREIGN DATA WRAPPER fdw_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br></pre></td></tr></table></figure><pre><code>\##</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GRANT &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON FOREIGN SERVER server_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GRANT &#123; EXECUTE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON &#123; &#123; FUNCTION | PROCEDURE | ROUTINE &#125; routine_name [ ( [ [ argmode ] [ arg_name ] arg_type [, ...] ] ) ] [, ...]</span><br><span class="line">         | ALL &#123; FUNCTIONS | PROCEDURES | ROUTINES &#125; IN SCHEMA schema_name [, ...] &#125;</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GRANT &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON LANGUAGE lang_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br></pre></td></tr></table></figure><pre><code>\##</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GRANT &#123; &#123; SELECT | UPDATE &#125; [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON LARGE OBJECT loid [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"></span><br><span class="line">GRANT &#123; &#123; CREATE | USAGE &#125; [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON SCHEMA schema_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">##连接schema权限，授权cc访问zjy schema权限</span><br><span class="line">grant usage on schema zjy to cc;</span><br><span class="line"></span><br><span class="line">GRANT &#123; CREATE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON TABLESPACE tablespace_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">GRANT &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON TYPE type_name [, ...]</span><br><span class="line">    TO role_specification [, ...] [ WITH GRANT OPTION ]</span><br><span class="line"></span><br><span class="line">where role_specification can be:</span><br><span class="line"></span><br><span class="line">    [ GROUP ] role_name</span><br><span class="line">  | PUBLIC</span><br><span class="line">  | CURRENT_USER</span><br><span class="line">  | SESSION_USER</span><br><span class="line"></span><br><span class="line">GRANT role_name [, ...] TO role_name [, ...] [ WITH ADMIN OPTION ]</span><br><span class="line">##把zjy用户的权限授予用户cc。</span><br><span class="line">grant zjy to cc;</span><br></pre></td></tr></table></figure><p>  <a href="https://blog.51cto.com/riverxyz/1880795" target="_blank" rel="noopener">权限说明</a>：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">SELECT：允许从指定表，视图或序列的任何列或列出的特定列进行SELECT。也允许使用COPY TO。在UPDATE或DELETE中引用现有列值也需要此权限。对于序列，此权限还允许使用currval函数。对于大对象，此权限允许读取对象。</span><br><span class="line"></span><br><span class="line">INSERT：允许将新行INSERT到指定的表中。如果列出了特定列，则只能在INSERT命令中为这些列分配（因此其他列将接收默认值）。也允许COPY FROM。</span><br><span class="line"></span><br><span class="line">UPDATE：允许更新指定表的任何列或列出的特定列，需要SELECT权限。</span><br><span class="line"></span><br><span class="line">DELETE：允许删除指定表中的行，需要SELECT权限。</span><br><span class="line"></span><br><span class="line">TRUNCATE：允许在指定的表上创建触发器。</span><br><span class="line"></span><br><span class="line">REFERENCES：允许创建引用指定表或表的指定列的外键约束。</span><br><span class="line"></span><br><span class="line">TRIGGER：允许在指定的表上创建触发器。 </span><br><span class="line"></span><br><span class="line">CREATE：对于数据库，允许在数据库中创建新的schema、table、index。</span><br><span class="line"></span><br><span class="line">CONNECT：允许用户连接到指定的数据库。在连接启动时检查此权限。</span><br><span class="line"></span><br><span class="line">TEMPORARY、TEMP：允许在使用指定数据库时创建临时表。</span><br><span class="line"></span><br><span class="line">EXECUTE：允许使用指定的函数或过程以及在函数。</span><br><span class="line"></span><br><span class="line">USAGE：对于schema，允许访问指定模式中包含的对象；对于sequence，允许使用currval和nextval函数。对于类型和域，允许在创建表，函数和其他模式对象时使用类型或域。</span><br><span class="line"></span><br><span class="line">ALL PRIVILEGES：一次授予所有可用权限。</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.postgresql.org/docs/11/sql-revoke.html" target="_blank" rel="noopener">撤销权限</a></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; &#123; SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER &#125;</span><br><span class="line">    [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON &#123; [ TABLE ] table_name [, ...]</span><br><span class="line">         | ALL TABLES IN SCHEMA schema_name [, ...] &#125;</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line"></span><br><span class="line"> ##移除用户zjy在schema zjy上所有表的select权限</span><br><span class="line"> revoke select on all tables in schema zjy from zjy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; &#123; SELECT | INSERT | UPDATE | REFERENCES &#125; ( column_name [, ...] )</span><br><span class="line">    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) &#125;</span><br><span class="line">    ON [ TABLE ] table_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line"></span><br><span class="line"> ##移除用户zjy在zjy schema的zjy表的age列的查询权限</span><br><span class="line"> revoke select (age) on zjy.zjy from zjy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; &#123; USAGE | SELECT | UPDATE &#125;</span><br><span class="line">    [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON &#123; SEQUENCE sequence_name [, ...]</span><br><span class="line">         | ALL SEQUENCES IN SCHEMA schema_name [, ...] &#125;</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##序列</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; &#123; CREATE | CONNECT | TEMPORARY | TEMP &#125; [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON DATABASE database_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON DOMAIN domain_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT]</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON FOREIGN DATA WRAPPER fdw_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT]</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON FOREIGN SERVER server_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT]</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; EXECUTE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON &#123; &#123; FUNCTION | PROCEDURE | ROUTINE &#125; function_name [ ( [ [ argmode ] [ arg_name ] arg_type [, ...] ] ) ] [, ...]</span><br><span class="line">         | ALL &#123; FUNCTIONS | PROCEDURES | ROUTINES &#125; IN SCHEMA schema_name [, ...] &#125;</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON LANGUAGE lang_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; &#123; SELECT | UPDATE &#125; [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON LARGE OBJECT loid [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; &#123; CREATE | USAGE &#125; [, ...] | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON SCHEMA schema_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##schena权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; CREATE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON TABLESPACE tablespace_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REVOKE [ GRANT OPTION FOR ]</span><br><span class="line">    &#123; USAGE | ALL [ PRIVILEGES ] &#125;</span><br><span class="line">    ON TYPE type_name [, ...]</span><br><span class="line">    FROM &#123; [ GROUP ] role_name | PUBLIC &#125; [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REVOKE [ ADMIN OPTION FOR ]</span><br><span class="line">    role_name [, ...] FROM role_name [, ...]</span><br><span class="line">    [ CASCADE | RESTRICT ]</span><br><span class="line">##</span><br></pre></td></tr></table></figure><p>  注意：任何用户对public的schema都有all的权限，为了安全可以禁止用户对public schema</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">##移除所有用户（public），superuser除外，对指定DB下的public schema的create 权限。</span><br><span class="line">zjy=# revoke  create  on schema public from public;</span><br><span class="line">REVOKE</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.postgresql.org/docs/11/sql-alteruser.html" target="_blank" rel="noopener">修改用户属性</a></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER role_specification [ WITH ] option [ ... ]</span><br><span class="line"></span><br><span class="line">where option can be:</span><br><span class="line"></span><br><span class="line">      SUPERUSER | NOSUPERUSER</span><br><span class="line">    | CREATEDB | NOCREATEDB</span><br><span class="line">    | CREATEROLE | NOCREATEROLE</span><br><span class="line">    | INHERIT | NOINHERIT</span><br><span class="line">    | LOGIN | NOLOGIN</span><br><span class="line">    | REPLICATION | NOREPLICATION</span><br><span class="line">    | BYPASSRLS | NOBYPASSRLS</span><br><span class="line">    | CONNECTION LIMIT connlimit</span><br><span class="line">    | [ ENCRYPTED ] PASSWORD &apos;password&apos; | PASSWORD NULL</span><br><span class="line">    | VALID UNTIL &apos;timestamp&apos;</span><br><span class="line"></span><br><span class="line">ALTER USER name RENAME TO new_name</span><br><span class="line"></span><br><span class="line">ALTER USER &#123; role_specification | ALL &#125; [ IN DATABASE database_name ] SET configuration_parameter &#123; TO | = &#125; &#123; value | DEFAULT &#125;</span><br><span class="line">ALTER USER &#123; role_specification | ALL &#125; [ IN DATABASE database_name ] SET configuration_parameter FROM CURRENT</span><br><span class="line">ALTER USER &#123; role_specification | ALL &#125; [ IN DATABASE database_name ] RESET configuration_parameter</span><br><span class="line">ALTER USER &#123; role_specification | ALL &#125; [ IN DATABASE database_name ] RESET ALL</span><br><span class="line"></span><br><span class="line">where role_specification can be:</span><br><span class="line"></span><br><span class="line">    role_name</span><br><span class="line">  | CURRENT_USER</span><br><span class="line">  | SESSION_USER</span><br></pre></td></tr></table></figure><p>  <strong>示例：</strong>     注意：option选项里的用户都可以通过alter role进行修改</p><ul><li><ul><li><p>修改用户为超级/非超级用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter role caocao with superuser/nosuperuser;</span><br></pre></td></tr></table></figure></li><li><p>修改用户为可/不可登陆用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter role caocao with nologin/login;</span><br></pre></td></tr></table></figure></li><li><p>修改用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter role caocao rename to youxing;</span><br></pre></td></tr></table></figure></li><li><p>修改用户密码，移除密码用NULL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter role youxing with password &apos;youxing&apos;;</span><br></pre></td></tr></table></figure></li><li><p>修改用户参数，该用户登陆后的以该参数为准</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter role zjy in database zjy SET geqo to 0/default;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><a href="https://www.postgresql.org/docs/11/auth-pg-hba-conf.html" target="_blank" rel="noopener">控制访问文件</a> pg_hba.conf<a href="https://www.postgresql.org/docs/11/auth-pg-hba-conf.html" target="_blank" rel="noopener"></a></p></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">local      database  user  auth-method  [auth-options]</span><br><span class="line">host       database  user  address  auth-method  [auth-options]</span><br><span class="line">hostssl    database  user  address  auth-method  [auth-options]</span><br><span class="line">hostnossl  database  user  address  auth-method  [auth-options]</span><br><span class="line">host       database  user  IP-address  IP-mask  auth-method  [auth-options]</span><br><span class="line">hostssl    database  user  IP-address  IP-mask  auth-method  [auth-options]</span><br><span class="line">hostnossl  database  user  IP-address  IP-mask  auth-method  [auth-options]</span><br></pre></td></tr></table></figure><p>  <strong>local</strong>：匹配使用Unix域套接字的连接，如果没有此类型的记录，则不允许使用Unix域套接字连接。<br>  <strong>host</strong>：匹配使用TCP/IP进行的连接，主机记录匹配SSL或非SSL连接，需要配置listen_addresses。<br>  <strong>hostssl</strong>：匹配使用TCP/IP进行的连接，仅限于使用SSL加密进行连接，需要配置ssl参数。<br>  <strong>hostnossl</strong>：匹配通过TCP/IP进行的连接，不使用SSL的连接。<br>  <strong>database</strong>：匹配的数据库名称，all指定它匹配所有数据库。如果请求的数据库与请求的用户具有相同的名称则可以使用samerole值。复制（replication）不指定数据库，多个数据库可以用逗号分隔。<br>  <strong>user</strong>：匹配的数据库用户名，值all指定它匹配所有用户。 可以通过用逗号分隔来提供多个用户名。<br>  <strong>address</strong>：匹配的客户端计算机地址，可以包含主机名，IP地址范围。如：172.20.143.89/32、172.20.143.0/24、10.6.0.0/16、:: 1/128。 0.0.0.0/0表示所有IPv4地址，:: 0/0表示所有IPv6地址。要指定单个主机，请使用掩码长度32（对于IPv4）或128（对于IPv6）。all以匹配任何IP地址。<br>  <strong>IP-address、IP-mask</strong>：这两个字段可用作IP地址/掩码长度，如：127.0.0.1 255.255.255.255。<br>  <strong>auth-method</strong>：指定连接与此记录匹配时要使用的身份验证方法：trust、reject、scram-sha-256、md5、password、gss、sspi、ident、peer、ldap、radius、cert、pam、bsd。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">trust：允许无条件连接，允许任何PostgreSQL用户身份登录，而无需密码或任何其他身份验证。</span><br><span class="line">reject：拒绝任何条件连接，这对于从组中“过滤掉”某些主机非常有用。</span><br><span class="line">scram-sha-256：执行SCRAM-SHA-256身份验证以验证用户的密码。</span><br><span class="line">md5：执行SCRAM-SHA-256或MD5身份验证以验证用户的密码。</span><br><span class="line">password：要提供未加密的密码以进行身份验证。由于密码是通过网络以明文形式发送的，因此不应在不受信任的网络上使用。</span><br><span class="line">gss：使用GSSAPI对用户进行身份验证，这仅适用于TCP / IP连接。</span><br><span class="line">sspi：使用SSPI对用户进行身份验证，这仅适用于Windows。</span><br><span class="line">ident：通过联系客户端上的ident服务器获取客户端的操作系统用户名，并检查它是否与请求的数据库用户名匹配。 Ident身份验证只能用于TCP / IP连接。为本地连接指定时，将使用对等身份验证。</span><br><span class="line">peer：从操作系统获取客户端的操作系统用户名，并检查它是否与请求的数据库用户名匹配。这仅适用于本地连接。</span><br><span class="line">ldap：使用LDAP服务器进行身份验证。</span><br><span class="line">radius：使用RADIUS服务器进行身份验证。</span><br><span class="line">cert：使用SSL客户端证书进行身份验证。</span><br><span class="line">pam：使用操作系统提供的可插入身份验证模块（PAM）服务进行身份验证。</span><br><span class="line">bsd：使用操作系统提供的BSD身份验证服务进行身份验证。</span><br></pre></td></tr></table></figure><p>  <strong>auth-options</strong>：在auth-method字段之后，可以存在name = value形式的字段，用于指定认证方法的选项。<br>  例子：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># TYPE  DATABASE    USER   ADDRESS   METHOD</span><br><span class="line">local          all               all                         trust</span><br><span class="line">--在本地允许任何用户无密码登录</span><br><span class="line">local          all                all                        peer</span><br><span class="line">--操作系统的登录用户和pg的用户是否一致，一致则可以登录</span><br><span class="line">local          all                all                        ident</span><br><span class="line">--操作系统的登录用户和pg的用户是否一致，一致则可以登录</span><br><span class="line">host          all                all    192.168.163.0/24   md5</span><br><span class="line">--指定客户端IP访问通过md5身份验证进行登录</span><br><span class="line">host          all                all     192.168.163.132/32   password</span><br><span class="line">--指定客户端IP通过passwotd身份验证进行登录</span><br><span class="line"></span><br><span class="line">host    all             all     192.168.54.1/32         reject</span><br><span class="line">host    all             all     192.168.0.0/16           ident  </span><br><span class="line">host    all             all     127.0.0.1       255.255.255.255     trust</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>  设置完之后可以通过查看表来查看hba：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">zjy=# select * from pg_hba_file_rules;</span><br><span class="line"> line_number | type  |   database    | user_name |    address    |                 netmask                 | auth_method | options | error </span><br><span class="line">-------------+-------+---------------+-----------+---------------+-----------------------------------------+-------------+---------+-------</span><br><span class="line">          87 | host  | &#123;all&#125;         | &#123;all&#125;     | 192.168.163.0 | 255.255.255.0                           | md5         |         | </span><br><span class="line">          92 | local | &#123;all&#125;         | &#123;all&#125;     |               |                                         | peer        |         | </span><br><span class="line">          94 | host  | &#123;all&#125;         | &#123;all&#125;     | 127.0.0.1     | 255.255.255.255                         | md5         |         | </span><br><span class="line">          96 | host  | &#123;all&#125;         | &#123;all&#125;     | ::1           | ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff | md5         |         | </span><br><span class="line">          99 | local | &#123;replication&#125; | &#123;all&#125;     |               |                                         | peer        |         | </span><br><span class="line">         100 | host  | &#123;replication&#125; | &#123;all&#125;     | 127.0.0.1     | 255.255.255.255                         | md5         |         | </span><br><span class="line">         101 | host  | &#123;replication&#125; | &#123;all&#125;     | ::1           | ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff | md5         |         |</span><br></pre></td></tr></table></figure><p>  当然，修改完pg_hba.conf文件之后，需要重新加载配置，不用重启数据库：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">postgres=# select pg_reload_conf();</span><br><span class="line"> pg_reload_conf </span><br><span class="line">----------------</span><br><span class="line"> t</span><br></pre></td></tr></table></figure><ul><li><h3 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h3></li></ul><p>用户权限管理涉及到的东西很多，本文也只是大致说明了一小部分，大部分的还得继续学习。那么现在按照一个正常项目上线的流程来创建一个应用账号为例，看看需要怎么操作。</p><p>比如一个项目<strong>zjy</strong>上线：用管理账号来操作</p><ul><li><p>创建数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# create database zjy;</span><br><span class="line">CREATE DATABASE</span><br></pre></td></tr></table></figure></li><li><p>创建账号：账号和数据库名字保持一致（search_path）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=# create user zjy with password &apos;zjy&apos;;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure></li><li><p>创建schema：不能用默认的public的schma</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">postgres=# \c zjy</span><br><span class="line">You are now connected to database &quot;zjy&quot; as user &quot;postgres&quot;.</span><br><span class="line">zjy=# create schema zjy;</span><br><span class="line">CREATE SCHEMA</span><br></pre></td></tr></table></figure></li><li><p>授权：</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="javascript:void(0);" alt="复制代码](https://common.cnblogs.com/images/copycode.gif)" title="">                </div>                <div class="image-caption">复制代码](https://common.cnblogs.com/images/copycode.gif)</div>            </figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#访问库</span><br><span class="line">zjy=# grant connect on database zjy to zjy;</span><br><span class="line">GRANT</span><br><span class="line">#访问schmea</span><br><span class="line">zjy=# grant usage on schema zjy to zjy;</span><br><span class="line">GRANT</span><br><span class="line">#访问表</span><br><span class="line">zjy=# grant select,insert,update,delete on all tables in schema zjy to zjy;</span><br><span class="line">GRANT</span><br><span class="line">#如果访问自增序列，需要授权</span><br><span class="line">zjy=# grant select,update on all sequences in schema zjy to zjy;</span><br><span class="line">GRANT</span><br><span class="line"></span><br><span class="line">注意：上面的授权只对历史的一些对象授权，后期增加的对象是没有权限的，需要给个默认权限</span><br><span class="line"></span><br><span class="line">#默认表权限</span><br><span class="line">zjy=# ALTER DEFAULT PRIVILEGES IN SCHEMA zjy GRANT select,insert,update,delete ON TABLES TO zjy;</span><br><span class="line">ALTER DEFAULT PRIVILEGES</span><br><span class="line"></span><br><span class="line">#默认自增序列权限</span><br><span class="line">zjy=# ALTER DEFAULT PRIVILEGES IN SCHEMA zjy GRANT select,update ON sequences TO zjy;</span><br><span class="line">ALTER DEFAULT PRIVILEGES</span><br></pre></td></tr></table></figure></li><li><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3></li></ul><ol><li><p>查看当前用户javascript:void(0);)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">zjy=# \du</span><br><span class="line">                                   List of roles</span><br><span class="line"> Role name |                         Attributes                         | Member of </span><br><span class="line">-----------+------------------------------------------------------------+-----------</span><br><span class="line"> admin     | Superuser, Cannot login                                    | &#123;&#125;</span><br><span class="line"> postgres  | Superuser, Create role, Create DB, Replication, Bypass RLS | &#123;&#125;</span><br><span class="line"> zjy       |                                                            | &#123;&#125;</span><br><span class="line"></span><br><span class="line">zjy=# select * from pg_roles;</span><br><span class="line">       rolname        | rolsuper | rolinherit | rolcreaterole | rolcreatedb | rolcanlogin | rolreplication | rolconnlimit | rolpassword | rolvaliduntil | rolbypassrls | rolconfig |  oid  </span><br><span class="line">----------------------+----------+------------+---------------+-------------+-------------+----------------+--------------+-------------+---------------+--------------+-----------+-------</span><br><span class="line"> pg_signal_backend    | f        | t          | f             | f           | f           | f              |           -1 | ********    |               | f            |           |  4200</span><br><span class="line"> postgres             | t        | t          | t             | t           | t           | t              |           -1 | ********    |               | t            |           |    10</span><br><span class="line"> admin                | t        | t          | f             | f           | f           | f              |           -1 | ********    |               | f            |           | 16456</span><br><span class="line"> pg_read_all_stats    | f        | t          | f             | f           | f           | f              |           -1 | ********    |               | f            |           |  3375</span><br><span class="line"> zjy                  | f        | t          | f             | f           | t           | f              |           -1 | ********    |               | f            |           | 16729</span><br><span class="line"> pg_monitor           | f        | t          | f             | f           | f           | f              |           -1 | ********    |               | f            |           |  3373</span><br><span class="line"> pg_read_all_settings | f        | t          | f             | f           | f           | f              |           -1 | ********    |               | f            |           |  3374</span><br><span class="line"> pg_stat_scan_tables  | f        | t          | f             | f           | f           | f              |           -1 | ********    |               | f            |           |  3377</span><br><span class="line">(8 rows)</span><br></pre></td></tr></table></figure></li><li><p>查看用户权限javascript:void(0);)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">zjy=# select * from information_schema.table_privileges where grantee=&apos;zjy&apos;;</span><br><span class="line"> grantor  | grantee | table_catalog | table_schema | table_name | privilege_type | is_grantable | with_hierarchy </span><br><span class="line">----------+---------+---------------+--------------+------------+----------------+--------------+----------------</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy        | INSERT         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy        | SELECT         | NO           | YES</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy        | UPDATE         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy        | DELETE         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy1       | INSERT         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy1       | SELECT         | NO           | YES</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy1       | UPDATE         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy1       | DELETE         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy2       | INSERT         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy2       | SELECT         | NO           | YES</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy2       | UPDATE         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy2       | DELETE         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy3       | INSERT         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy3       | SELECT         | NO           | YES</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy3       | UPDATE         | NO           | NO</span><br><span class="line"> postgres | zjy     | zjy           | zjy          | zjy3       | DELETE         | NO           | NO</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;创建好用户（角色）之后需要连接的话，还需要修改2个权限控制的配置文件（pg_hba.conf、pg_ident.conf）。并且创建用户（user）和创建角色（role）一样，唯一的区别是用户默认可以登录，而创建的角色默认不能登录。创
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos安装vnc</title>
    <link href="http://wumuwumu.github.io/2020/09/15/%E8%BF%90%E7%BB%B4/centos%E5%AE%89%E8%A3%85vnc/"/>
    <id>http://wumuwumu.github.io/2020/09/15/运维/centos安装vnc/</id>
    <published>2020-09-15T01:32:57.000Z</published>
    <updated>2020-09-15T01:32:57.995Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>centos8安装docker</title>
    <link href="http://wumuwumu.github.io/2020/09/05/%E8%BF%90%E7%BB%B4/centos8%E5%AE%89%E8%A3%85docker/"/>
    <id>http://wumuwumu.github.io/2020/09/05/运维/centos8安装docker/</id>
    <published>2020-09-05T13:40:23.000Z</published>
    <updated>2020-09-17T10:40:12.828Z</updated>
    
    <content type="html"><![CDATA[<p><strong>背景简介</strong>：</p><p>现在centos已经到了8 ，一直在接触容器方面，为了尝鲜，下载了CentOS8，并尝试安装docker&amp;docker-ce，不料竟然还报了个错（缺少依赖），故及时记录一下，方便其他同学。</p><p><strong>安装步骤：</strong></p><ol><li>下载docker-ce的repo</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><ol start="2"><li>安装依赖（这是相比centos7的关键步骤）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm</span><br></pre></td></tr></table></figure><ol start="3"><li>安装docker-ce</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure><ol start="4"><li>启动docker</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><ol start="5"><li>开机启动docker</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p>6.安装docker-compose</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>7.添加操作权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>8.设置快捷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p>9.查看docker-compose 版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;背景简介&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;现在centos已经到了8 ，一直在接触容器方面，为了尝鲜，下载了CentOS8，并尝试安装docker&amp;amp;docker-ce，不料竟然还报了个错（缺少依赖），故及时记录一下，方便其他同学。&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>sudoer文件解析</title>
    <link href="http://wumuwumu.github.io/2020/09/05/%E8%BF%90%E7%BB%B4/sudoer%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90/"/>
    <id>http://wumuwumu.github.io/2020/09/05/运维/sudoer文件解析/</id>
    <published>2020-09-05T13:40:23.000Z</published>
    <updated>2020-09-15T02:51:26.395Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>sudo的权限控制可以在<code>/etc/sudoers</code>文件中查看到。</p><p>如果想要控制某个用户(或某个组用户)只能执行root权限中的一部分命令, 或者允许某些用户使用sudo时不需要输入密码,就需要对该文件有所了解。</p><p>一般来说，通过<code>cat /etc/sudoers</code>指令来查看该文件, 会看到如下几行代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root   ALL=(ALL:ALL) ALL</span><br><span class="line">%wheel ALL=(ALL) ALL</span><br><span class="line">%sudo  ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure><p>对<code>/etc/sudoers</code>文件进行编辑的代码公式可以概括为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">授权用户/组 主机=[(切换到哪些用户或组)] [是否需要输入密码验证] 命令1,命令2,...</span><br></pre></td></tr></table></figure><p>凡是<code>[ ]</code>中的内容, 都能省略; 命令和命令之间用<code>,</code>号分隔;</p><p>为了方便说明, 将公式的各个部分称呼为字段1 - 字段5:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">授权用户/组 主机  =[(切换到哪些用户或组)] [是否需要输入密码验证] 命令1,命令2,...</span><br><span class="line">字段1      字段2  =[(字段3)] [字段4] 字段5</span><br></pre></td></tr></table></figure><p>字段3、字段4，是可以省略的。</p><p>在上面的默认例子中, “字段1”不以<code>%</code>号开头的表示”将要授权的用户”, 比如例子中的<code>root</code>；<br>以<code>%</code>号开头的表示”将要授权的组”, 比如例子中的<code>%wheel</code>组 和 <code>%sudo</code>组。</p><p>“字段2”表示允许登录的主机, ALL表示所有; 如果该字段不为ALL,表示授权用户只能在某些机器上登录本服务器来执行sudo命令. 比如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jack mycomputer=/usr/sbin/reboot,/usr/sbin/shutdown</span><br></pre></td></tr></table></figure><p>表示: 普通用户jack在主机(或主机组)mycomputer上, 可以通过sudo执行reboot和shutdown两个命令。”字段3”和”字段4”省略。</p><p>“字段3”如果省略, 相当于<code>(root:root)</code>，表示可以通过<code>sudo</code>提权到root; 如果为<code>(ALL)</code>或者<code>(ALL:ALL)</code>, 表示能够提权到<code>(任意用户:任意用户组)</code>。</p><p>请注意，”字段3”如果没省略,必须使用<code>( )</code>双括号包含起来。这样才能区分是省略了”字段3”还是省略了”字段4”。</p><p>“字段4”的可能取值是<code>NOPASSWD:</code>。请注意NOPASSWD后面带有冒号<code>:</code>。表示执行sudo时可以不需要输入密码。比如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lucy ALL=(ALL) NOPASSWD: /bin/useradd</span><br></pre></td></tr></table></figure><p>表示: 普通用户lucy可以在任何主机上, 通过sudo执行<code>/bin/useradd</code>命令, 并且不需要输入密码.</p><p>又比如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peter ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><p>表示: 普通用户peter可以在任何主机上, 通过sudo执行任何命令, 并且不需要输入密码。</p><p>“字段5”是使用逗号分开一系列命令,这些命令就是授权给用户的操作; ALL表示允许所有操作。</p><p>你可能已经注意到了, 命令都是使用绝对路径, 这是为了避免目录下有同名命令被执行，从而造成安全隐患。</p><p>如果你将授权写成如下安全性欠妥的格式:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lucy ALL=(ALL) chown,chmod,useradd</span><br></pre></td></tr></table></figure><p>那么用户就有可能创建一个他自己的程序, 也命名为userad, 然后放在它的本地路径中, 如此一来他就能够使用root来执行这个”名为useradd的程序”。这是相当危险的!</p><p>命令的绝对路径可通过<code>which</code>指令查看到: 比如<code>which useradd</code>可以查看到命令<code>useradd</code>的绝对路径: <code>/usr/sbin/useradd</code></p><h3 id="公式还要扩充"><a href="#公式还要扩充" class="headerlink" title="公式还要扩充"></a>公式还要扩充</h3><p>例子1:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">papi ALL=(root) NOPASSWD: /bin/chown,/usr/sbin/useradd</span><br></pre></td></tr></table></figure><p>表示: 用户papi能在所有可能出现的主机上, 提权到root下执行/bin/chown, 不必输入密码; 但运行/usr/sbin/useradd 命令时需要密码.</p><p>这是因为<code>NOPASSWD:</code>只影响了其后的第一个命令: 命令1.</p><p>上面给出的公式只是简化版，完整的公式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">授权用户/组 主机=[(切换到哪些用户或组)] [是否需要输入密码验证] 命令1, [(字段3)] [字段4] 命令2, ...</span><br></pre></td></tr></table></figure><p>在具有sudo操作的用户下, 执行<code>sudo -l</code>可以查看到该用户被允许和被禁止运行的命令.</p><h3 id="通配符和取消命令"><a href="#通配符和取消命令" class="headerlink" title="通配符和取消命令"></a>通配符和取消命令</h3><p>例子2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">papi ALL=/usr/sbin/*,/sbin/*,!/usr/sbin/fdisk</span><br></pre></td></tr></table></figure><p>用例子2来说明通配符<code>*</code>的用法, 以及命令前面加上<code>!</code>号表示取消该命令。</p><p>该例子的意思是: 用户papi在所有可能出现的主机上, 能够运行目录/usr/sbin和/sbin下所有的程序, 但fdisk除外.</p><h3 id="开始编辑"><a href="#开始编辑" class="headerlink" title="开始编辑"></a>开始编辑</h3><p>“你讲了这么多,但是在实践中,我去编辑/etc/sudoers文件，系统提示我没权限啊，怎么办?”</p><p>这是因为<code>/etc/sudoers</code>的内容如此敏感，以至于该文件是只读的。所以，编辑该文件前，请确认清楚你知道自己正在做什么。</p><p>强烈建议通过<code>visudo</code>命令来修改该文件，通过<code>visudo</code>修改，如果配置出错，会有提示。</p><p>不过，系统文档推荐的做法，不是直接修改<code>/etc/sudoers</code>文件，而是将修改写在<code>/etc/sudoers.d/</code>目录下的文件中。</p><p>如果使用这种方式修改sudoers，需要在<code>/etc/sudoers</code>文件的最后行，加上<code>#includedir /etc/sudoers.d</code>一行(默认已有):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#includedir /etc/sudoers.d</span><br></pre></td></tr></table></figure><p>注意了，这里的指令<code>#includedir</code>是一个整体, 前面的<code>#</code>号不能丢，并非注释，也不能在<code>#</code>号后有空格。</p><p>任何在<code>/etc/sudoers.d/</code>目录下，不以<code>~</code>号结尾的文件和不包含<code>.</code>号的文件，都会被解析成<code>/etc/sudoers</code>的内容。</p><p>文档中是这么说的:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This will cause sudo to read and parse any files in the /etc/sudoers.d</span></span><br><span class="line"><span class="comment"># directory that do not end in '~' or contain a '.' character.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note that there must be at least one file in the sudoers.d directory (this</span></span><br><span class="line"><span class="comment"># one will do), and all files in this directory should be mode 0440.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note also, that because sudoers contents can vary widely, no attempt is</span></span><br><span class="line"><span class="comment"># made to add this directive to existing sudoers files on upgrade.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Finally, please note that using the visudo command is the recommended way</span></span><br><span class="line"><span class="comment"># to update sudoers content, since it protects against many failure modes.</span></span><br></pre></td></tr></table></figure><h3 id="其他小知识"><a href="#其他小知识" class="headerlink" title="其他小知识"></a>其他小知识</h3><h4 id="输入密码时有反馈"><a href="#输入密码时有反馈" class="headerlink" title="输入密码时有反馈"></a>输入密码时有反馈</h4><p>当使用sudo后输入密码，并不会显示任何东西 —— 甚至连常规的星号都没有。有个办法可以解决该问题。</p><p>打开<code>/etc/sudoers</code>文件找到下述一行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Defaults env_reset</span><br></pre></td></tr></table></figure><p>修改成:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Defaults        env_reset,pwfeedback</span><br></pre></td></tr></table></figure><h4 id="修改sudo会话时间"><a href="#修改sudo会话时间" class="headerlink" title="修改sudo会话时间"></a>修改sudo会话时间</h4><p>如果你经常使用sudo 命令，你肯定注意到过当你成功输入一次密码后，可以不用再输入密码就可以运行几次sudo命令。<br>但是一段时间后，sudo 命令会再次要求你输入密码。默认是15分钟，该时间可以调整。添加<code>timestamp_timeout=分钟数</code>即可。<br>时间以分钟为单位，-1表示永不过期，但强烈不推荐。</p><p>比如我希望将时间延长到1小时，还是打开<code>/etc/sudoers</code>文件找到下述一行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Defaults env_reset</span><br></pre></td></tr></table></figure><p>修改成:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Defaults        env_reset,pwfeedback,timestamp_timeout=60</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;sudo的权限控制可以在&lt;code&gt;/etc/sudoers&lt;/code&gt;文件中查看到。&lt;/p&gt;
&lt;p&gt;如果想要控制某个用户(或某个组用户)只能执行root权限中的一部分命令, 或者允许某些用户使用sudo时不需要输入密码,就需要对该文件有所了解。&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos8扩容root分区</title>
    <link href="http://wumuwumu.github.io/2020/09/05/%E8%BF%90%E7%BB%B4/centos8%E6%89%A9%E5%AE%B9root%E5%88%86%E5%8C%BA/"/>
    <id>http://wumuwumu.github.io/2020/09/05/运维/centos8扩容root分区/</id>
    <published>2020-09-05T13:40:23.000Z</published>
    <updated>2020-09-15T08:32:28.724Z</updated>
    
    <content type="html"><![CDATA[<h1 id="扩展磁盘"><a href="#扩展磁盘" class="headerlink" title="扩展磁盘"></a>扩展磁盘</h1><p>最近使用虚拟机的方式弄了个centos8的虚拟机，体验最新centos系统，分配了127g的空间，由于实际需要，发现home空间有好几十g的空间，而我都是使用root用户，无需home空间，因此找到在centos8中把home空间调整到root的方法，这里跟网上找到的centos7是有差别的。</p><p>步骤：</p><ol><li>使用usb系统进入修复</li><li>使用df-h查看空间使用情况，备份home</li><li>卸载home文件系统</li><li>删除/home所在的lv</li><li>扩展/root所在的lv</li><li>扩展/root文件系统</li><li>重新创建home lv并挂载home</li><li>查看最终调整结果</li></ol><h2 id="使用df-lh查看空间使用情况，备份home"><a href="#使用df-lh查看空间使用情况，备份home" class="headerlink" title="使用df-lh查看空间使用情况，备份home"></a>使用df-lh查看空间使用情况，备份home</h2><p>首先登陆ssh，使用df -lh查看空间使用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -lh</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gireyleo0zj30kf07cjsm.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>root已经不够了，而vps也就自己一个人用，根本不需要用到home，home设置1个g就够了，其余的都给root，这样就可以给root多出来73个g的空间。 这因为一开始没有截图，所以看到的是后面的1g大小，一开始home是74g大小的。 备份home文件到/tmp目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar cvf  /tmp/home.tar /home</span><br><span class="line"><span class="comment"># zip -r /tmp/home.zip /home</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gireyr28toj30go0c5dh3.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="卸载home文件系统"><a href="#卸载home文件系统" class="headerlink" title="卸载home文件系统"></a>卸载home文件系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fuser -km /home/</span><br><span class="line">umount /home</span><br></pre></td></tr></table></figure><p>解除home目录的占用，卸载home目录</p><h2 id="删除-home所在的lv"><a href="#删除-home所在的lv" class="headerlink" title="删除/home所在的lv"></a>删除/home所在的lv</h2><p>这一步centos8有很大不同，因为centos7中目录是/dev/mapper/centos-home,而在centos8中为 /dev/mapper/cl-home，因此注意卸载设备名称</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvremove /dev/mapper/cl-home</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girez61asuj30nf01xmxc.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="扩展-root所在的lv"><a href="#扩展-root所在的lv" class="headerlink" title="扩展/root所在的lv"></a>扩展/root所在的lv</h2><p>扩展root空间lv</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -L +73G /dev/mapper/cl-root</span><br></pre></td></tr></table></figure><h2 id="扩展-root文件系统"><a href="#扩展-root文件系统" class="headerlink" title="扩展/root文件系统"></a>扩展/root文件系统</h2><p>这一步是真正增加root空间，centos7和centos8具有非常大的差别，centos7中是使用xfs_growfs /dev/mapper/centos-root，按逻辑centos8就应该是 xfs_growfs /dev/mapper/cl-root，但是结果就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_growfs /dev/mapper/cl-root</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girezkj110j30li01gdfw.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>经过摸索发现应该直接使用/就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_growfs /</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girf0736ygj30pp0810ub.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="重新创建home-lv并挂载home"><a href="#重新创建home-lv并挂载home" class="headerlink" title="重新创建home lv并挂载home"></a>重新创建home lv并挂载home</h2><p>创建1g空间的home</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -L 1G -n home cl</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girf0kmo2hj30qq02rq39.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>文件系统类型设置<br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/cl/home</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girf0uu0ecj30pa07dq4c.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>挂载到home目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/cl/home /home</span><br></pre></td></tr></table></figure><p>恢复home目录下文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mv /tmp/home.tar /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">tar xvf  home.tar</span><br><span class="line">mv home/* .</span><br><span class="line">rm -rf home*</span><br></pre></td></tr></table></figure><h2 id="查看最终调整结果"><a href="#查看最终调整结果" class="headerlink" title="查看最终调整结果"></a>查看最终调整结果</h2><p>查看各分区大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -lh</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girf13w9foj30jt06qjsf.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>本文主要介绍了在centos8系统下调整各分区大小，这里就是/home分区和/root分区，介绍在centos7和centos8下参数差异。熟悉linux系统下的文件系统的分区调整。对于刚装系统分区不合适需要调整centos各分区大小的用户起到指导作用，有疑问再邮件联系吧。</p><h1 id="lvm修改根分区大小"><a href="#lvm修改根分区大小" class="headerlink" title="lvm修改根分区大小"></a>lvm修改根分区大小</h1><ul><li>参考：<ol><li>减小lvm根分区容量: <a href="http://kwokchivu.blog.51cto.com/1128937/724128" target="_blank" rel="noopener">http://kwokchivu.blog.51cto.com/1128937/724128</a></li><li>CentOS 5 LVM逻辑卷管理: <a href="http://sunshyfangtian.blog.51cto.com/1405751/860018" target="_blank" rel="noopener">http://sunshyfangtian.blog.51cto.com/1405751/860018</a></li></ol></li></ul><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>home、根各为50GB空间，根空间不足，需缩小home至10GB、扩大根为90GB。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lvm&gt; lvscan</span><br><span class="line">  ACTIVE            &apos;/dev/vg_db/lv_root&apos; [50.00 GiB] inherit</span><br><span class="line">  ACTIVE            &apos;/dev/vg_db/lv_home&apos; [50.00 GiB] inherit</span><br><span class="line">  ACTIVE            &apos;/dev/vg_db/lv_swap&apos; [9.83 GiB] inherit</span><br></pre></td></tr></table></figure><h2 id="缩小home、增大根分区"><a href="#缩小home、增大根分区" class="headerlink" title="缩小home、增大根分区"></a>缩小home、增大根分区</h2><h3 id="进入rescue模式"><a href="#进入rescue模式" class="headerlink" title="进入rescue模式"></a>进入rescue模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">增大root分区是否可以在线完成、不用进rescue状态？找机会试试...</span><br></pre></td></tr></table></figure><p>从Linux安装光盘启动进入rescue模式；</p><p>选择相关的语言，键盘模式，当系统提示启用网络设备时，选择“NO”；</p><p>然后在提示允许rescue模式挂载本地Linux系统到/mnt/sysimage下时选择“Skip”，文件系统必须不被挂载才可以对/分区减小容量操作。</p><p>最后系统会提示选择进入shell终端还是reboot机器，选择进入shell终端。</p><h3 id="激活分区"><a href="#激活分区" class="headerlink" title="激活分区"></a>激活分区</h3><p>输入lvm命令，进入lvm界面，依次输入pvscan、vgscan、lvscan三个命令扫描pv、vg、lv相关信息。</p><p>然后输入lvchange -ay /dev/vg_db/lv_root（上文提到的/分区名称）此命令是激活/分区所在的逻辑卷，输入 quit返回到bash shell界面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lvchange -ay /dev/vg_db/lv_home</span><br><span class="line">lvchange -ay /dev/vg_db/lv_root</span><br></pre></td></tr></table></figure><h3 id="缩小home分区"><a href="#缩小home分区" class="headerlink" title="缩小home分区"></a>缩小home分区</h3><ul><li><p>先检查下分区: e2fsck -f /dev/vg_db/lv_home</p></li><li><p>缩小文件系统大小：resize2fs /dev/vg_db/lv_home 10G</p></li><li><p>缩小逻辑卷</p><ul><li>输入lvm命令进入lvm模式</li><li>缩小逻辑卷：lvreduce -L 10G /dev/vg_db/lv_home</li><li>系统会询问是否缩小逻辑卷，输入 y 确定。</li></ul></li><li><p>查看修改结果: vgdisplay，lvdisplay</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">减小LVM中的文件系统必须离线操作(处于umount装态)，要减小文件系统和LV:</span><br><span class="line">    # Unmount相应的文件系统</span><br><span class="line">    # 运行磁盘检查确保卷的完整</span><br><span class="line">    # 减小文件系统</span><br><span class="line">    # 减小LV</span><br></pre></td></tr></table></figure></li></ul><h3 id="扩大根分区"><a href="#扩大根分区" class="headerlink" title="扩大根分区"></a>扩大根分区</h3><ul><li>先检查下分区: e2fsck -f /dev/vg_db/lv_root</li><li>扩大逻辑卷:<ul><li>输入lvm命令进入lvm模式</li><li>扩大逻辑卷：lvresize -L +40G /dev/vg_db/lv_root</li></ul></li><li>更改文件系统大小<ul><li>resize2fs -p /dev/vg_db/lv_root</li></ul></li><li>查看修改结果: lvscan</li></ul><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><h3 id="修改swap卷大小"><a href="#修改swap卷大小" class="headerlink" title="修改swap卷大小"></a>修改swap卷大小</h3><ul><li>取消激活swap空间: swapoff</li><li>修改swap分区大小: lvresize -L 4G /dev/vg_db/lv_swap</li><li>重新格区化: mkswap -f /dev/vb_db/lv_swap</li><li>激活swap空间: swapon</li></ul><h3 id="新建逻辑卷lv-develop"><a href="#新建逻辑卷lv-develop" class="headerlink" title="新建逻辑卷lv_develop"></a>新建逻辑卷lv_develop</h3><ul><li>创建逻辑卷 : lvcreate -L 2.8G -n lv_develop /dev/vb_db</li><li>创建文件系统 : mkfs.ext3 /dev/vg_db/lv_develop</li></ul><h3 id="增加物理盘"><a href="#增加物理盘" class="headerlink" title="增加物理盘"></a>增加物理盘</h3><ul><li>fdisk分区，并将分区类型为0×8e(Linux LVM)</li><li>创建物理卷PV: pvcreate /dev/hdb1</li><li>创建卷组VG: vgcreate vgtest /dev/hdb1</li><li>添加PV到VG: vgextend</li><li>创建逻辑卷LV: lvcreate -L 6000M -n mysql vgtest</li><li>创建文件系统: mkfs -t ext3 /dev/vgtest/mysql</li><li>建立新分区卷标: tune2fs –L /mysql /dev/vgtest/mysql</li><li>加载新分区: mount –t ext3 /dev/vgtest/mysql /mysql</li><li>卸载卷的顺序:<ol><li>umount</li><li>卸载逻辑卷:lvremove LVDEVICE</li><li>卸载卷组:vgremove VGNAME</li><li>卸载物理卷:pvremove PVDEVICE</li></ol></li></ul><h1 id="LVM分区在线扩容"><a href="#LVM分区在线扩容" class="headerlink" title="LVM分区在线扩容"></a>LVM分区在线扩容</h1><p>2011-12-19 15:24:16</p><p><a href="http://share.blog.51cto.com/278008/745479" target="_blank" rel="noopener">http://share.blog.51cto.com/278008/745479</a></p><p>今天对三台服务器的LV分区进行了一次扩容。本文有点标题党嫌疑，因为只有一台服务器是在线扩容，其它两台都是先卸载再扩容的。</p><p>在线扩容的这台服务器，LV分区格式为xfs，原大小1.2TB。增加了一块硬盘，大小为1.8TB。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`fdisk` `/dev/cciss/c0d1`                              `# 创建分区，并指定分区类型为LVM (8e) ``pvcreate ``/dev/cciss/c0d1p1`                         `# 创建pv``vgextend VolGroup00 ``/dev/cciss/c0d1p1`              `# 添加新创建的pv到原有vg``lvextend -L +1.8T ``/dev/mapper/VolGroup00-LogVol05`  `# 在线扩容指定lv分区``xfs_growfs ``/dev/mapper/VolGroup00-LogVol05`         `# 使扩容生效。注意xfs文件系统的生效命令！ `</span><br></pre></td></tr></table></figure><p>其它两台服务器也是新增了一个1.8TB的硬盘，要扩容的LV分区格式为ext3。之所以没有进行在线扩容，是因为没有找到ext2online命令；后来发现，resize2fs也是支持在线扩容的！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`lvextend -l +100%FREE ``/dev/mapper/VolGroup00-LogVol05``umount` `-l ``/dev/mapper/VolGroup00-LogVol05``e2fsck -f ``/dev/mapper/VolGroup00-LogVol05`    `# 过程比较长 ``resize2fs ``/dev/mapper/VolGroup00-LogVol05`    `# 也要几分钟时间 ``mount` `/dev/mapper/VolGroup00-LogVol05` `/hdfs`</span><br></pre></td></tr></table></figure><p>虽然resize2fs可以在线使用，但是对在线lv分区执行e2fsck有点风险！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;扩展磁盘&quot;&gt;&lt;a href=&quot;#扩展磁盘&quot; class=&quot;headerlink&quot; title=&quot;扩展磁盘&quot;&gt;&lt;/a&gt;扩展磁盘&lt;/h1&gt;&lt;p&gt;最近使用虚拟机的方式弄了个centos8的虚拟机，体验最新centos系统，分配了127g的空间，由于实际需要，发现home
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos配置网络</title>
    <link href="http://wumuwumu.github.io/2020/09/05/%E8%BF%90%E7%BB%B4/centos%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C/"/>
    <id>http://wumuwumu.github.io/2020/09/05/运维/centos配置网络/</id>
    <published>2020-09-05T13:40:23.000Z</published>
    <updated>2020-09-15T10:12:51.109Z</updated>
    
    <content type="html"><![CDATA[<p>centos8已经发布了，下载了一个体验一下，新安装好的centos8默认网卡是没有启动的，安装好后需要先配置网络。在<code>/etc/sysconfig/network-scripts</code>目录下存放着网卡的配置文件，文件名称是<code>ifcfg- 网卡名称</code>。</p><h4 id="一-修改配置文件"><a href="#一-修改配置文件" class="headerlink" title="一 修改配置文件"></a>一 修改配置文件</h4><p>设置网络时首先打开配置文件，配置文件默认如下所示，如果使用dhcp自动获取ip，只需将<code>ONBOOT=no</code>修改为<code>ONBOOT=no</code>即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 网卡配置文件按默认配置</span><br><span class="line"></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=e4987998-a4ce-4cef-96f5-a3106a97f5bf</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=no  #如果使用dhcp分配ip的话，只需要将这里no改为yes，然后重启网络服务就行</span><br></pre></td></tr></table></figure><p>如果需要配置静态ip，则按照以下修改方法修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static   #将dhcp修改为stati表示使用静态ip</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPADDR=192.168.128.129   #设置IP地址</span><br><span class="line">NETMASK=255.255.255.0    #设置子网掩码</span><br><span class="line">GATEWAY=192.168.128.1    #设置网关</span><br><span class="line">DNS1=114.114.114.114     #设置dns</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=e4987998-a4ce-4cef-96f5-a3106a97f5bf</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes  #将no改为yes</span><br></pre></td></tr></table></figure><h4 id="二-重启网络服务"><a href="#二-重启网络服务" class="headerlink" title="二 重启网络服务"></a>二 重启网络服务</h4><p>使用<strong>nmcli c reload</strong>命令重启网络服务，网络这块算是centos8改动较大的一块了，nmcli命令的参数如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[hk@localhost network-scripts]$ nmcli  -h</span><br><span class="line">Usage: nmcli [OPTIONS] OBJECT &#123; COMMAND | help &#125;</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">  -o[verview]                                    overview mode (hide default values)</span><br><span class="line">  -t[erse]                                       terse output</span><br><span class="line">  -p[retty]                                      pretty output</span><br><span class="line">  -m[ode] tabular|multiline                      output mode</span><br><span class="line">  -c[olors] auto|yes|no                          whether to use colors in output</span><br><span class="line">  -f[ields] &lt;field1,field2,...&gt;|all|common       specify fields to output</span><br><span class="line">  -g[et-values] &lt;field1,field2,...&gt;|all|common   shortcut for -m tabular -t -f</span><br><span class="line">  -e[scape] yes|no                               escape columns separators in values</span><br><span class="line">  -a[sk]                                         ask for missing parameters</span><br><span class="line">  -s[how-secrets]                                allow displaying passwords</span><br><span class="line">  -w[ait] &lt;seconds&gt;                              set timeout waiting for finishing operations</span><br><span class="line">  -v[ersion]                                     show program version</span><br><span class="line">  -h[elp]                                        print this help</span><br><span class="line">OBJECT</span><br><span class="line">  g[eneral]       NetworkManager&apos;s general status and operations</span><br><span class="line">  n[etworking]    overall networking control</span><br><span class="line">  r[adio]         NetworkManager radio switches</span><br><span class="line">  c[onnection]    NetworkManager&apos;s connections  # 网络管理一般使用 nmcli c</span><br><span class="line">  d[evice]        devices managed by NetworkManager</span><br><span class="line">  a[gent]         NetworkManager secret agent or polkit agent</span><br><span class="line">  m[onitor]       monitor NetworkManager changes</span><br><span class="line"></span><br><span class="line">[hk@localhost network-scripts]$</span><br></pre></td></tr></table></figure><p>网络管理一般使用 <code>nmclli c</code>，用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[hk@localhost network-scripts]$ nmcli c -h</span><br><span class="line"></span><br><span class="line">Usage: nmcli connection &#123; COMMAND | help &#125;</span><br><span class="line">COMMAND := &#123; show | up | down | add | modify | clone | edit | delete | monitor | reload | load | import | export &#125;</span><br><span class="line"></span><br><span class="line">  show [--active] [--order &lt;order spec&gt;]</span><br><span class="line"></span><br><span class="line">  show [--active] [id | uuid | path | apath] &lt;ID&gt; ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  up [[id | uuid | path] &lt;ID&gt;] [ifname &lt;ifname&gt;] [ap &lt;BSSID&gt;] [passwd-file &lt;file with passwords&gt;]</span><br><span class="line"></span><br><span class="line">  down [id | uuid | path | apath] &lt;ID&gt; ...</span><br><span class="line"></span><br><span class="line">  add COMMON_OPTIONS TYPE_SPECIFIC_OPTIONS SLAVE_OPTIONS IP_OPTIONS [-- ([+|-]&lt;setting&gt;.&lt;property&gt; &lt;value&gt;)+]</span><br><span class="line"></span><br><span class="line">  modify [--temporary] [id | uuid | path] &lt;ID&gt; ([+|-]&lt;setting&gt;.&lt;property&gt; &lt;value&gt;)+</span><br><span class="line"></span><br><span class="line">  clone [--temporary] [id | uuid | path ] &lt;ID&gt; &lt;new name&gt;</span><br><span class="line"></span><br><span class="line">  edit [id | uuid | path] &lt;ID&gt;</span><br><span class="line">  edit [type &lt;new_con_type&gt;] [con-name &lt;new_con_name&gt;]</span><br><span class="line">  delete [id | uuid | path] &lt;ID&gt;</span><br><span class="line">  monitor [id | uuid | path] &lt;ID&gt; ...</span><br><span class="line">  reload</span><br><span class="line">  load &lt;filename&gt; [ &lt;filename&gt;... ]</span><br><span class="line">  import [--temporary] type &lt;type&gt; file &lt;file to import&gt;</span><br><span class="line">  export [id | uuid | path] &lt;ID&gt; [&lt;output file&gt;]</span><br><span class="line"></span><br><span class="line">[hk@localhost network-scripts]$</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;centos8已经发布了，下载了一个体验一下，新安装好的centos8默认网卡是没有启动的，安装好后需要先配置网络。在&lt;code&gt;/etc/sysconfig/network-scripts&lt;/code&gt;目录下存放着网卡的配置文件，文件名称是&lt;code&gt;ifcfg- 网卡名
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos创建用户</title>
    <link href="http://wumuwumu.github.io/2020/09/05/%E8%BF%90%E7%BB%B4/centos%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7/"/>
    <id>http://wumuwumu.github.io/2020/09/05/运维/centos创建用户/</id>
    <published>2020-09-05T13:40:23.000Z</published>
    <updated>2020-09-15T10:13:58.257Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">useradd wumu</span><br><span class="line"></span><br><span class="line"><span class="comment">## 给用户添加组，一定要加a</span></span><br><span class="line">(FC4: usermod -G groupA,groupB,groupC user)</span><br><span class="line">-a 代表 append， 也就是 将自己添加到 用户组groupA 中，而不必离开 其他用户组。</span><br><span class="line"><span class="comment">#命令的所有的选项，及其含义：</span></span><br><span class="line">Options:</span><br><span class="line">-c, --comment COMMENT         new value of the GECOS field</span><br><span class="line">-d, --home HOME_DIR           new home directory <span class="keyword">for</span> the user account</span><br><span class="line">-e, --expiredate EXPIRE_DATE <span class="built_in">set</span> account expiration date to EXPIRE_DATE</span><br><span class="line">-f, --inactive INACTIVE       <span class="built_in">set</span> password inactive after expiration</span><br><span class="line">to INACTIVE</span><br><span class="line">-g, --gid GROUP               force use GROUP as new primary group</span><br><span class="line">-G, --groups GROUPS           new list of supplementary GROUPS</span><br><span class="line">-a, --append          append the user to the supplemental GROUPS</span><br><span class="line">mentioned by the -G option without removing</span><br><span class="line">him/her from other groups</span><br><span class="line">-h, --<span class="built_in">help</span>                    display this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">-l, --login NEW_LOGIN         new value of the login name</span><br><span class="line">-L, --lock                    lock the user account</span><br><span class="line">-m, --move-home               move contents of the home directory to the new</span><br><span class="line">location (use only with -d)</span><br><span class="line">-o, --non-unique              allow using duplicate (non-unique) UID</span><br><span class="line">-p, --password PASSWORD       use encrypted password <span class="keyword">for</span> the new password</span><br><span class="line">-s, --shell SHELL             new login shell <span class="keyword">for</span> the user account</span><br><span class="line">-u, --uid UID                 new UID <span class="keyword">for</span> the user account</span><br><span class="line">-U, --unlock                  unlock the user account</span><br><span class="line"></span><br><span class="line">usermod -a -G wumugroup wumu</span><br><span class="line">passwd wumu</span><br></pre></td></tr></table></figure><h1 id="添加sudo权限"><a href="#添加sudo权限" class="headerlink" title="添加sudo权限"></a>添加sudo权限</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#找到如下行数</span></span><br><span class="line">root  ALL=(ALL)   ALL</span><br><span class="line"><span class="comment">#添加</span></span><br><span class="line">username ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><h1 id="免密码登录"><a href="#免密码登录" class="headerlink" title="免密码登录"></a>免密码登录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id -i .ssh/id_rsa.pub  用户名字@192.168.x.xxx</span><br><span class="line">ssh 用户名字@192.168.x.xxx</span><br></pre></td></tr></table></figure><h1 id="使用pem登录"><a href="#使用pem登录" class="headerlink" title="使用pem登录"></a>使用pem登录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在本地生成公钥私钥</span></span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment">#输入命令后，一路回车，即可。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将本地的公钥传到服务器上</span></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</span><br><span class="line"><span class="comment">#会提示你输入密码，成功之后，会帮助你把公钥放在服务器上，供登录使用。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#把本地的私钥转为 pem 格式，供windows上的 ssh 客户端使用</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> ~/.ssh/id_rsa -outform pem &gt; id_rsa.pem</span><br><span class="line">chmod 700 id_rsa.pem</span><br><span class="line"><span class="comment">#这样就导出了pem格式的私钥，因为公钥已经在服务器了，所以只要服务器上的公钥不删除，用这把私钥就能登录服务器,一般来说，经过这样设置之后，可以把ssh 密码登录的方式禁用掉，使得服务器更加安全。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭 ssh 密码登录</span></span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#修改</span></span><br><span class="line"></span><br><span class="line">PasswordAuthentication no</span><br><span class="line"><span class="comment">#重启 ssh 服务</span></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;创建用户&quot;&gt;&lt;a href=&quot;#创建用户&quot; class=&quot;headerlink&quot; title=&quot;创建用户&quot;&gt;&lt;/a&gt;创建用户&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos使用cockpit</title>
    <link href="http://wumuwumu.github.io/2020/09/05/%E8%BF%90%E7%BB%B4/centos%E4%BD%BF%E7%94%A8cockpit/"/>
    <id>http://wumuwumu.github.io/2020/09/05/运维/centos使用cockpit/</id>
    <published>2020-09-05T13:40:23.000Z</published>
    <updated>2020-09-17T01:34:55.941Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now cockpit.socket</span><br><span class="line"></span><br><span class="line">[leiakun@centos8 ~]$ sudo systemctl <span class="built_in">enable</span> --now cockpit.socket</span><br><span class="line">[sudo] leiakun 的密码：</span><br><span class="line">Created symlink /etc/systemd/system/sockets.target.wants/cockpit.socket → /usr/lib/systemd/system/cockpit.socket.</span><br><span class="line">[leiakun@centos8 ~]$ </span><br><span class="line"></span><br><span class="line">[leiakun@centos8 ~]$ sudo firewall-cmd --get-services |grep cockpit</span><br><span class="line">RH-Satellite-6 amanda-client amanda-k5-client amqp amqps apcupsd audit</span><br><span class="line">bacula bacula-client bb bgp bitcoin bitcoin-rpc bitcoin-testnet bitcoin-testnet-rpc</span><br><span class="line">bittorrent-lsd ceph ceph-mon cfengine cockpit condor-collector ctdb dhcp dhcpv6 </span><br><span class="line">dhcpv6-client distcc dns dns-over-tls docker-registry docker-swarm dropbox-lansync </span><br><span class="line">elasticsearch etcd-client etcd-server finger freeipa-4 freeipa-ldap freeipa-ldaps </span><br><span class="line">freeipa-replication freeipa-trust ftp ganglia-client ganglia-master git grafana </span><br><span class="line">gre high-availability http https imap imaps ipp ipp-client ipsec irc ircs </span><br><span class="line">iscsi-target isns jenkins kadmin kdeconnect kerberos kibana klogin kpasswd </span><br><span class="line">kprop kshell ldap ldaps libvirt libvirt-tls lightning-network llmnr managesieve</span><br><span class="line">matrix mdns memcache minidlna mongodb mosh mountd mqtt mqtt-tls ms-wbt mssql</span><br><span class="line">murmur mysql nfs nfs3 nmea-0183 nrpe ntp nut openvpn ovirt-imageio ovirt-storageconsole </span><br><span class="line">ovirt-vmconsole plex pmcd pmproxy pmwebapi pmwebapis pop3 pop3s postgresql privoxy</span><br><span class="line">prometheus proxy-dhcp ptp pulseaudio puppetmaster quassel radius rdp redis </span><br><span class="line">redis-sentinel rpc-bind rsh rsyncd rtsp salt-master samba samba-client samba-dc</span><br><span class="line">sane sip sips slp smtp smtp-submission smtps snmp snmptrap spideroak-lansync </span><br><span class="line">spotify-sync squid ssdp ssh steam-streaming svdrp svn syncthing syncthing-gui </span><br><span class="line">synergy syslog syslog-tls telnet tentacle tftp tftp-client tile38 tinc tor-socks </span><br><span class="line">transmission-client upnp-client vdsm vnc-server wbem-http wbem-https wsman wsmans</span><br><span class="line">xdmcp xmpp-bosh xmpp-client xmpp-local xmpp-server zabbix-agent zabbix-server</span><br><span class="line"></span><br><span class="line">sudo firewall-cmd --add-service=cockpit --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h1 id="多主机管理"><a href="#多主机管理" class="headerlink" title="多主机管理"></a>多主机管理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y cockpit-dashboard</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos8安装kvm</title>
    <link href="http://wumuwumu.github.io/2020/09/05/%E8%BF%90%E7%BB%B4/centos8%E5%AE%89%E8%A3%85kvm/"/>
    <id>http://wumuwumu.github.io/2020/09/05/运维/centos8安装kvm/</id>
    <published>2020-09-05T13:40:23.000Z</published>
    <updated>2020-09-17T10:39:42.381Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在CentOS-RHEL-8上安装KVM虚拟化"><a href="#如何在CentOS-RHEL-8上安装KVM虚拟化" class="headerlink" title="如何在CentOS/RHEL 8上安装KVM虚拟化"></a>如何在CentOS/RHEL 8上安装KVM虚拟化</h1><p>基于内核的虚拟机（简称KVM）是一种开源的标准虚拟化解决方案，已紧密集成到Linux中。它是一个可加载的内核模块，将Linux转换为Type-1（裸机）虚拟机管理程序，该虚拟机管理程序创建了用于运行虚拟机（VM）的虚拟操作平台。</p><h3 id="精选回答"><a href="#精选回答" class="headerlink" title="精选回答"></a>精选回答</h3><p>在KVM下，每个VM是一个Linux进程，由内核调度和管理，并具有专用的虚拟化硬件（即CPU，网卡，磁盘等）。它还支持嵌套虚拟化，使您可以在另一个VM内运行一个VM。</p><p>它的一些主要功能包括支持广泛的Linux支持的硬件平台（带有虚拟化扩展的x86硬件（Intel VT或AMD-V）），它使用SELinux和安全虚拟化（sVirt）提供增强的VM安全性和隔离，它继承了内核内存管理功能，并且支持脱机和实时迁移（在物理主机之间迁移正在运行的VM）。</p><p>在本文中，您将学习如何在CentOS 8和RHEL 8 Linux中安装KVM虚拟化，创建和管理虚拟机。</p><p>准备工作：</p><p>全新安装的CentOS 8<a href="https://www.a5idc.net/" target="_blank" rel="noopener">服务器</a></p><p>全新安装的RHEL 8服务器</p><p>在RHEL 8服务器上启用了RedHat订阅</p><p>此外，通过运行以下命令，确保您的硬件平台支持虚拟化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># grep -e &apos;vmx&apos; /proc/cpuinfo #Intel systems</span><br><span class="line"># grep -e &apos;svm&apos; /proc/cpuinfo #AMD systems</span><br></pre></td></tr></table></figure><p>另外，请确认内核中已加载KVM模块（默认情况下应为KVM模块）。</p><p>＃lsmod | grep kvm</p><p>这是基于英特尔的测试系统上的示例输出：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tp.a5idc.net/wd/1a.png" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>在以前的KVM指南系列中，我们展示了如何使用KVM（基于内核的虚拟机）在Linux中创建虚拟机，并展示了如何使用virt-manager GUI工具（根据RHEL已弃用）创建和管理VM。8个文档）。对于本指南，我们将采用不同的方法，我们将使用Cockpit Web控制台。</p><p>步骤1：在CentOS 8上设置Cockpit Web控制台</p><p>1.在Cockpit是一个易于使用的集成和可扩展的基于Web的界面在网页浏览器来管理Linux服务器。它使您能够执行系统任务，例如配置网络，管理存储，创建VM和使用鼠标检查日志。它使用系统的普通用户登录名和特权，但也支持其他身份验证方法。</p><p>它是预先安装的，并已在新安装的CentOS 8和RHEL 8系统上启用，如果尚未安装，请使用以下dnf命令进行安装。应安装cockpit-machines扩展程序以管理基于Libvirt的 VM 。</p><p># dnf install cockpit cockpit-machines</p><p>2.软件包安装完成后，启动座舱插座，使其在系统启动时自动启动，并检查其状态以确认其已启动并正在运行。</p><p># systemctl start cockpit.socket</p><p># systemctl enable cockpit.socket</p><p># systemctl status cockpit.socket</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgr7689tj30p807nwej.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>3.接下来，使用firewall-cmd命令将cockpit服务添加到默认启用的系统防火墙中，然后重新加载防火墙配置以应用新更改。</p><p># firewall-cmd –add-service=cockpit –permanent</p><p># firewall-cmd –reload</p><p>4.要访问CockpitWeb控制台，请打开Web浏览器并使用以下URL进行导航。</p><p><a href="https://FQDN:9090/或者https://SERVER_IP:9090/" target="_blank" rel="noopener">https://FQDN:9090/或者https://SERVER_IP:9090/</a></p><p>该Cockpit采用的是自签名证书启用HTTPS，只需使用该连接，当你在浏览器的警告。在登录页面上，使用您的服务器用户帐户凭据。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrar1fvj30wq0n4glu.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrbov8uj30wq0nldgf.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>步骤2：安装KVM虚拟化CentOS 8</p><p>5.接下来，如下安装虚拟化模块和其他虚拟化软件包。所述的virt安装包提供用于从所述命令行界面进行安装的虚拟机的工具，和一个的virt查看器用于查看虚拟机。</p><p># dnf module install virt</p><p># dnf install virt-install virt-viewer</p><p>6.接下来，运行virt-host-validate命令以验证主机是否设置为运行libvirt系统管理程序驱动程序。</p><p># virt-host-validate</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgr7hgijj30o506mt8o.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>7.接下来，启动libvirtd守护程序（libvirtd），并使它在每次引导时自动启动。然后检查其状态以确认它已启动并正在运行。</p><p># systemctl start libvirtd.service</p><p># systemctl enable libvirtd.service</p><p># systemctl status libvirtd.service</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrd3s9zj30vz0bj74i.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>步骤3：通过Cockpit设置网桥（虚拟网络交换机）</p><p>8.现在创建一个网桥（虚拟网络交换机），将虚拟机集成到与主机相同的网络中。默认情况下，一旦启动libvirtd守护程序，它将激活默认网络接口virbr0，该接口代表以NAT模式运行的虚拟网络交换机。</p><p>在本指南中，我们将以桥接模式创建名为br0的网络接口。这将使虚拟机可在主机网络上访问。</p><p>在座舱主界面中，单击“ 网络”，然后单击“ 添加网桥”，如以下屏幕截图所示。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrf0gggj30yd0n8dgd.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>9.从弹出窗口中，输入网桥名称，然后选择网桥从站或端口设备（例如，代表以太网接口的enp2s0），如以下屏幕截图所示。然后单击“ 应用”。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgr9t6d6j30ls0dedfu.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>10.现在，当您查看“ 接口 ”列表时，新的网桥应显示在此处，几秒钟后，应禁用以太网接口（关闭）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgraacb2j30ya0bz3yo.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>步骤4：通过Cockpit Web控制台创建和管理虚拟机</p><p>11.在座舱主界面中，单击“ 虚拟机”选项，如以下屏幕快照中突出显示。在“ 虚拟机”页面上，单击创建虚拟机。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrejb9rj30wm0ckq30.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>12.将显示一个带有用于创建新VM的选项的窗口。输入连接，名称（例如ubuntu18.04），安装源类型（在测试系统上，我们已将ISO映像存储在存储池下，即/ var / lib / libvirt / images /），安装源，存储，大小，内存如下图所示。输入安装源后，应自动选择OS供应商和操作系统。</p><p>还要选中立即启动VM的选项，然后单击“ 创建”。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgr9d2jdj30hp0gedg2.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>13.在上一步中单击“ 创建”后，应自动启动VM，并使用提供的ISO映像启动VM。继续安装客户机操作系统（在本例中为Ubuntu 18.04）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgr7y5kjj30wj0hst90.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>如果你点击网络接口的的虚拟机，网络源应注明新建桥网络接口。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgr8w9jwj30wm09o74g.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>并且在安装过程中，在配置网络接口的步骤中，您应该能够注意到VM以太网接口从主机网络的DHCP服务器接收IP地址。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrcmjofj30wm0c1q33.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>请注意，您需要安装OpenSSH软件包才能从主机网络上的任何计算机通过SSH访问来宾OS，如上一节所述。</p><p>14.客户机操作系统安装完成后，请重新引导VM，然后转到“ 磁盘”并分离/除去VM磁盘下的cdrom设备。然后单击“运行”以启动VM。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrb8getj30rs090wek.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrc5he7j30s206mdfr.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>15.现在，在Consoles（控制台）下，您可以使用在OS安装期间创建的用户帐户登录来宾OS。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgr8ep0jj30qu0il74f.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>步骤5：通过SSH访问虚拟机访客操作系统</p><p>16.要通过SSH从主机网络访问新安装的来宾OS，请运行以下命令（将10.42.0.197替换为来宾的IP地址）。</p><p>$ ssh <a href="mailto:tecmint@10.42.0.197" target="_blank" rel="noopener">tecmint@10.42.0.197</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgrdqnrej30qj0ent91.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>17.要关闭，重新启动或删除VM，请从VM列表中单击它，然后使用以下屏幕快照中突出显示的按钮。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1girgre19rij30sy0b2dfw.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>在本文中，介绍了如何安装KVM虚拟化软件包以及如何通过cockpit Web控制台创建和管理VM。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何在CentOS-RHEL-8上安装KVM虚拟化&quot;&gt;&lt;a href=&quot;#如何在CentOS-RHEL-8上安装KVM虚拟化&quot; class=&quot;headerlink&quot; title=&quot;如何在CentOS/RHEL 8上安装KVM虚拟化&quot;&gt;&lt;/a&gt;如何在CentOS/R
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>网络配置三种模式对比（桥接模式，主机模式，网络地址转换）</title>
    <link href="http://wumuwumu.github.io/2020/08/27/docker/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F%E5%AF%B9%E6%AF%94%EF%BC%88%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%EF%BC%8C%E4%B8%BB%E6%9C%BA%E6%A8%A1%E5%BC%8F%EF%BC%8C%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2%EF%BC%89/"/>
    <id>http://wumuwumu.github.io/2020/08/27/docker/网络配置三种模式对比（桥接模式，主机模式，网络地址转换）/</id>
    <published>2020-08-27T10:29:58.000Z</published>
    <updated>2020-08-27T10:40:26.033Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VMware三种网络模式简介"><a href="#VMware三种网络模式简介" class="headerlink" title="VMware三种网络模式简介"></a>VMware三种网络模式简介</h1><p>​    VMWare提供了三种工作模式，它们是bridged(桥接模式)、NAT(网络地址转换模式)和host-only(主机模式)。安装好虚拟机以后，在网络连接里面可以看到多了两块网卡。如下图。</p><h1 id="1-bridged-桥接模式"><a href="#1-bridged-桥接模式" class="headerlink" title="1 bridged(桥接模式)"></a>1 bridged(桥接模式)</h1><h2 id="1-1-模式简介"><a href="#1-1-模式简介" class="headerlink" title="1.1 模式简介"></a>1.1 模式简介</h2><p>　　在这种模式下，VMWare虚拟出来的操作系统就像是局域网中的一台独立的主机，它可以访问网内任何一台机器。  　　在桥接模式下，你需要手工为虚拟系统配置IP地址、子网掩码，而且还要和<a href="https://cloud.tencent.com/product/cdh?from=10680" target="_blank" rel="noopener">宿主机</a>器处于同一网段，这样虚拟系统才能和宿主机器进行通信。同时，由 于这个虚拟系统是局域网中的一个独立的主机系统，那么就可以手工配置它的TCP/IP配置信息，以实现通过局域网的网关或路由器访问互联网。  　　使用桥接模式的虚拟系统和宿主机器的关系，就像连接在同一个Hub上的两台电脑。想让它们相互通讯，你就需要为虚拟系统配置IP地址和子网掩码，否则就无法通信。    </p><h2 id="1-2-工作的虚拟网卡"><a href="#1-2-工作的虚拟网卡" class="headerlink" title="1.2 工作的虚拟网卡"></a>1.2 工作的虚拟网卡</h2><p>​    bridged模式下的VMnet0虚拟网络    </p><h2 id="1-3-架构图"><a href="#1-3-架构图" class="headerlink" title="1.3 架构图"></a>1.3 架构图</h2><p>1）使用VMnet0虚拟交换机，此时虚拟机相当与网络上的一台独立计算机与主机一样，拥有一个独立的IP地址。使用<strong>桥接方式</strong>，A，A1，A2，B可互访。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gi5jxbkbk6j30ir0a00ta.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2）虚拟机就像一台真正的计算机一样，直接连接到实际的网络上，可以理解为与宿主机没有任何联系。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gi5jzb54q3j30ig08caam.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="1-4-使用范围"><a href="#1-4-使用范围" class="headerlink" title="1.4 使用范围"></a>1.4 使用范围</h2><p>​    1）如果你想利用VMWare在局域网内新建一个虚拟服务器，为局域网用户提供网络服务，就应该选择桥接模式。      2）如果你有路由器的话，那么就可以使用桥接方式上网，因为此时你申请的IP地址是写在了路由器上，而不是你的机器上，这样包括你的主机，虚拟机，也包括 连在路由器上的其他人的机器，都将可以上网，使用着由路由器分配的IP地址。  </p><h1 id="2-host-only-主机模式"><a href="#2-host-only-主机模式" class="headerlink" title="2 host-only(主机模式)"></a>2 host-only(主机模式)</h1><h2 id="2-1-模式简介"><a href="#2-1-模式简介" class="headerlink" title="2.1 模式简介"></a>2.1 模式简介</h2><p>​    在某些特殊的网络调试环境中，要求将真实环境和虚拟环境隔离开，这时你就可采用host-only模式。在host-only模式中，所有的虚拟系统是可以相互通信的，但虚拟系统和真实的网络是被隔离开的。  　　提示：在host-only模式下，虚拟系统和宿主机器系统是可以相互通信的，相当于这两台机器通过双绞线互连。  　　在host-only模式下，虚拟系统的TCP/IP配置信息(如IP地址、网关地址、DNS服务器等)，都是由VMnet1(host-only)虚拟网络的DHCP服务器来动态分配的。  　　如果你想利用VMWare创建一个与网内其他机器相隔离的虚拟系统，进行某些特殊的网络调试工作，可以选择host-only模式。    <a href="http://blog.csdn.net/suneqing/article/details/51787336" target="_blank" rel="noopener">Linux虚拟机实现Host-only方式上网</a></p><h2 id="2-2-工作的虚拟网卡"><a href="#2-2-工作的虚拟网卡" class="headerlink" title="2.2 工作的虚拟网卡"></a>2.2 工作的虚拟网卡</h2><p>   host-only模式下的 VMnet1虚拟网络  </p><h2 id="2-3-架构图"><a href="#2-3-架构图" class="headerlink" title="2.3 架构图"></a>2.3 架构图</h2><p>1）使用Vmnet1虚拟交换机，此时虚拟机只能与虚拟机、主机互访。也就是不能上Internet。使用Host方式，A，A1，A2可以互访，但A1，A2不能访问B，也不能被B访问。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gi5jzy56yqj30h709ajs1.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2）这种方式下，虚拟机的网卡连接到宿主的 VMnet1 上，但系统并不为虚拟机提供任何路由服务，因此虚拟机只能和宿主机进行通信，而不能连接到实际网络上。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gi5k09nm0nj30hb086dgg.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="2-4-使用范围"><a href="#2-4-使用范围" class="headerlink" title="2.4 使用范围"></a>2.4 使用范围</h2><p>   如果你想利用VMWare创建一个与网内其他机器相隔离的虚拟系统，进行某些特殊的网络调试工作，可以选择host-only模式。  </p><h1 id="3-NAT-网络地址转换模式"><a href="#3-NAT-网络地址转换模式" class="headerlink" title="3 NAT(网络地址转换模式)"></a>3 NAT(网络地址转换模式)</h1><h2 id="3-1-模式简介"><a href="#3-1-模式简介" class="headerlink" title="3.1 模式简介"></a>3.1 模式简介</h2><p>​    使用NAT模式，就是让虚拟系统借助NAT(网络地址转换)功能，通过宿主机器所在的网络来访问公网。也就是说，使用NAT模式可以实现在虚拟 系统里访问互联网。NAT模式下的虚拟系统的TCP/IP配置信息是由VMnet8(NAT)虚拟网络的DHCP服务器提供的，无法进行手工修改，因此虚拟系统也就无法和本局域网中的其他真实主机进行通讯。采用NAT模式最大的优势是虚拟系统接入互联网非常简单，你不需要进行任何其他的配置，只需要宿主机 器能访问互联网即可。    </p><h2 id="3-2-工作的虚拟网卡"><a href="#3-2-工作的虚拟网卡" class="headerlink" title="3.2 工作的虚拟网卡"></a>3.2 工作的虚拟网卡</h2><p>   NAT模式下的VMnet8虚拟网络    </p><h2 id="3-3-架构图"><a href="#3-3-架构图" class="headerlink" title="3.3 架构图"></a>3.3 架构图</h2><p>1） 使用Vmnet8虚拟交换机，此时虚拟机可以通过主机单向网络上的其他工作站，其他工作站不能访问虚拟机。用NAT方式，A1，A2可以访问B，但B不可以访问A1，A2。但A，A1，A2可以互访。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gi5k0pewx6j30i909gaav.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2） 这种方式下，虚拟机的网卡连接到宿主的 VMnet8 上。此时系统的 VMWare NAT Service 服务就充当了路由器的作用，负责将虚拟机发到 VMnet8 的包进行地址转换之后发到实际的网络上，再将实际网络上返回的包进行地址转换后通过 VMnet8 发送给虚拟机。VMWare DHCP Service 负责为虚拟机提供 DHCP 服务。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gi5k0w2pqrj30hm0863z4.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="3-4-使用范围"><a href="#3-4-使用范围" class="headerlink" title="3.4 使用范围"></a>3.4 使用范围</h2><p>​    如果你想利用VMWare安装一个新的虚拟系统，在虚拟系统中不用进行任何手工配置就能直接访问互联网，建议你采用NAT模式。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/CleverCode/article/details/45934233" target="_blank" rel="noopener">https://blog.csdn.net/CleverCode/article/details/45934233</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;VMware三种网络模式简介&quot;&gt;&lt;a href=&quot;#VMware三种网络模式简介&quot; class=&quot;headerlink&quot; title=&quot;VMware三种网络模式简介&quot;&gt;&lt;/a&gt;VMware三种网络模式简介&lt;/h1&gt;&lt;p&gt;​    VMWare提供了三种工作模式，它
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wumuwumu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose文件编写</title>
    <link href="http://wumuwumu.github.io/2020/08/27/docker/docker-compose%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99/"/>
    <id>http://wumuwumu.github.io/2020/08/27/docker/docker-compose文件编写/</id>
    <published>2020-08-27T10:10:37.000Z</published>
    <updated>2020-08-27T10:10:37.427Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot+Quartz框架的实现</title>
    <link href="http://wumuwumu.github.io/2020/08/14/SpringBoot-Quartz%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://wumuwumu.github.io/2020/08/14/SpringBoot-Quartz框架的实现/</id>
    <published>2020-08-14T10:39:29.000Z</published>
    <updated>2020-08-14T10:48:22.911Z</updated>
    
    <content type="html"><![CDATA[<p>定时任务 想必做程序的都或多或少的接触过,以便于我们以某个特定的 时间/频率 去执行所需要的程序,Quartz 是一个优秀的框架,可以根据我们的配置将 定时任务的执行 时间/频率 持久化至数据库, 我们通过修改数据库中的任务下次执行时间,达到不需要等到任务配置执行的原始 时间/频率,随时地运行定时任务; 并且可以看到任务的运行状态 WATING BLOCKING等</p><p>   1.导入依赖</p><p>   quartz自定义配置的数据源会使用C3P0创建连接,所以要引入C3P0依赖</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- Quartz定时任务 --&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-quartz&lt;/artifactId&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">&lt;!--C3P0 --&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;com.mchange&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;c3p0&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;0.9.5.5&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>2.quartz 配置文件,yml方式</p><p>创建定时任务表的sql太长,这里就不贴了,我会将sql上传至GitHub,文末我会贴地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">## quartz定时任务</span><br><span class="line">spring:</span><br><span class="line">  quartz:</span><br><span class="line">    #jdbc 采用数据库方式  memory 采用内存方式</span><br><span class="line">    job-store-type: jdbc  </span><br><span class="line">    initialize-schema: embedded</span><br><span class="line">    #设置自动启动，默认为 true</span><br><span class="line">    auto-startup: <span class="keyword">true</span></span><br><span class="line">    #启动时更新己存在的Job</span><br><span class="line">    overwrite-existing-jobs: <span class="keyword">true</span></span><br><span class="line">    properties:</span><br><span class="line">      org:</span><br><span class="line">        quartz:</span><br><span class="line">          scheduler:</span><br><span class="line">            instanceName: MyScheduler</span><br><span class="line">            instanceId: AUTO</span><br><span class="line">          jobStore:</span><br><span class="line">            #指定使用的JobStore</span><br><span class="line">            class: org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line">            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br><span class="line">            #数据库前缀</span><br><span class="line">            tablePrefix: QRTZ_</span><br><span class="line">            #是否为集群</span><br><span class="line">            isClustered: <span class="keyword">false</span></span><br><span class="line">            #检测任务执行时间的间隔  毫秒</span><br><span class="line">            misfireThreshold: <span class="number">5000</span></span><br><span class="line">            clusterCheckinInterval: <span class="number">10000</span></span><br><span class="line">            #数据源名称</span><br><span class="line">            dataSource: myDS</span><br><span class="line">          #线程池配置</span><br><span class="line">          threadPool:</span><br><span class="line">            class: org.quartz.simpl.SimpleThreadPool</span><br><span class="line">            threadCount: <span class="number">20</span></span><br><span class="line">            threadPriority: <span class="number">5</span></span><br><span class="line">            threadsInheritContextClassLoaderOfInitializingThread: <span class="keyword">true</span></span><br><span class="line">          #数据源</span><br><span class="line">          dataSource:</span><br><span class="line">            myDS:</span><br><span class="line">              driver: com.mysql.cj.jdbc.Driver</span><br><span class="line">              URL: jdbc:mysql:<span class="comment">//localhost:3306/test?characterEncoding=UTF-8&amp;useUnicode=true&amp;useSSL=false&amp;tinyInt1isBit=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">              user: root</span><br><span class="line">              password: root</span><br><span class="line">              maxConnections: <span class="number">5</span></span><br></pre></td></tr></table></figure><p>有同学可能会问了,配置文件是配置好了,是在哪引用的呢? 别急, 且听我娓娓道来</p><p>spring-boot-starter-quartz (为方便诉说,下文中使用 bootquartz代替) 这个包下的QuartzProperties会帮我们自动加载配置文件,且看以下部分截图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20200617111853517.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RlbW9fTGl1,size_16,color_FFFFFF,t_70" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>可以看到, QuartzProperties 使用了 @ConfigurationProperties 加载了 spring.quartz 前缀的配置,也就是上面我们的配置文件中的配置;加载之后呢, bootquartz包下有 类 QuartzAutoConfiguration, 看名字就可以知道,这个就是自动配置 quartz的类了.</p><p>所以我们不需要再去通过代码去配置 SchedulerFactoryBean 了,这是后话</p><p>QuartzAutoConfiguration 类注释</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20200617113632769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RlbW9fTGl1,size_16,color_FFFFFF,t_70" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>通过上面的截图我们发现,这里引用了 QuartzProperties</p><p>其中的 quartzScheduler()方法帮助我们创建了 SchedulerFactoryBean 并使用了<strong> </strong>QuartzProperties 中的自定义配置,以下是quartzScheduler()部分代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> SchedulerFactoryBean <span class="title">quartzScheduler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SchedulerFactoryBean schedulerFactoryBean = <span class="keyword">new</span> SchedulerFactoryBean();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.properties.getProperties().isEmpty()) &#123;</span><br><span class="line">schedulerFactoryBean</span><br><span class="line">.setQuartzProperties(asProperties(<span class="keyword">this</span>.properties.getProperties()));</span><br><span class="line">&#125;</span><br><span class="line">customize(schedulerFactoryBean);</span><br><span class="line"><span class="keyword">return</span> schedulerFactoryBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>姑且一提,方法中调用了 customize(SchedulerFactoryBean  schedulerFactoryBean) 方法,这个方法会寻找实现了 SchedulerFactoryBeanCustomizer 接口的配置类,在其实现方法 customize(SchedulerFactoryBean  schedulerFactoryBean)中 可对 SchedulerFactoryBean  使用代码自定义配置</p><p>那么到这里结束了吗?不! 这里还有本文中最大的一个坑,作者深受其扰,扒了两天的源码才找到这个问题!!!</p><p>如果我们的项目中有其它的默认数据源,那么quartz会忽略配置文件中自定义数据源,使用默认数据源,原因看以下源码</p><p>首先是 QuartzAutoConfiguration 中的 静态内部类 JdbcStoreTypeConfiguration</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnSingleCandidate</span>(DataSource.class)</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcStoreTypeConfiguration</span> </span>&#123;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@Order</span>(<span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> SchedulerFactoryBeanCustomizer <span class="title">dataSourceCustomizer</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">QuartzProperties properties, DataSource dataSource,</span></span></span><br><span class="line"><span class="function"><span class="params">@QuartzDataSource ObjectProvider&lt;DataSource&gt; quartzDataSource,</span></span></span><br><span class="line"><span class="function"><span class="params">ObjectProvider&lt;PlatformTransactionManager&gt; transactionManager)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (schedulerFactoryBean) -&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> (properties.getJobStoreType() == JobStoreType.JDBC) &#123;</span><br><span class="line">                              <span class="comment">//重点在这里 begin</span></span><br><span class="line">DataSource dataSourceToUse = getDataSource(dataSource,quartzDataSource);</span><br><span class="line">schedulerFactoryBean.setDataSource(dataSourceToUse);</span><br><span class="line">                              <span class="comment">//重点在这里 end</span></span><br><span class="line">PlatformTransactionManager txManager = transactionManager.getIfUnique();</span><br><span class="line"><span class="keyword">if</span> (txManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">schedulerFactoryBean.setTransactionManager(txManager);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">private</span> DataSource <span class="title">getDataSource</span><span class="params">(DataSource dataSource,</span></span></span><br><span class="line"><span class="function"><span class="params">ObjectProvider&lt;DataSource&gt; quartzDataSource)</span> </span>&#123;</span><br><span class="line">DataSource dataSourceIfAvailable = quartzDataSource.getIfAvailable();</span><br><span class="line"><span class="keyword">return</span> (dataSourceIfAvailable != <span class="keyword">null</span>) ? dataSourceIfAvailable : dataSource;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的getDataSource 方法判断了我们项目中的 quartzDataSource是否为空,如果为空,那么就使用默认的数据源;quartzDataSource怎么才能不为空呢? 可以看到dataSourceCustomizer 方法参数中有 @QuartzDataSource 注解, 这个注解会去寻找我们项目中使用@QuartzDataSource配置的数据源,但是 我都已经在配置文件中自定义了数据源,再去手动配置一遍不是多此一举吗? 接着往下看</p><p><strong>SchedulerFactoryBean 的初始化方法部分源码▼</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initSchedulerFactory</span><span class="params">(StdSchedulerFactory schedulerFactory)</span> <span class="keyword">throws</span> SchedulerException, IOException </span>&#123;</span><br><span class="line">Properties mergedProps = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.dataSource != <span class="keyword">null</span>) &#123;</span><br><span class="line">mergedProps.setProperty(StdSchedulerFactory.PROP_JOB_STORE_CLASS, LocalDataSourceJobStore.class.getName());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在静态内部类设置过了数据源,初始化方法只要发现数据源不为空,那么就使用会使用 LocalDataSourceJobStore 覆盖我们quartz配置文件中设置的  org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX</p><p>而LocalDataSourceJobStore 中的初始化方法使用的是 SchedulerFactoryBean 中设置的数据源,所以我们quartz配置文件中的数据源才不会生效!!!</p><p>怎么解决呢?   我们上面提到了customize(SchedulerFactoryBean  schedulerFactoryBean) 方法,这个方法会寻找实现了 SchedulerFactoryBeanCustomizer 接口的配置类,在其实现方法 customize(SchedulerFactoryBean  schedulerFactoryBean)中 可对 SchedulerFactoryBean  使用代码自定义配置</p><p>所以 我们只要在SchedulerFactoryBean 创建后调用初始化方法之前,再将DataSource设置为null,那么SchedulerFactoryBean 初始化时,将会使用我们配置文件中的JobStoreTX去寻找我们配置的数据源了,至此,填坑完毕▼</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.quartz.SchedulerFactoryBeanCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.quartz.SchedulerFactoryBean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Demo-Liu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-06-12 11:20</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 配置定时任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SchedulerConfig</span> <span class="keyword">implements</span> <span class="title">SchedulerFactoryBeanCustomizer</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Demo-Liu</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Date</span> 20200614 12:44</span></span><br><span class="line"><span class="comment">     * 自定义 quartz配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> schedulerFactoryBean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(SchedulerFactoryBean schedulerFactoryBean)</span> </span>&#123;</span><br><span class="line">        schedulerFactoryBean.setDataSource(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>以上</strong></p><p><strong>在文末附上我的GitHub小demo,其中包含了quartz的数据库建表sql,并提供了一种可以更加灵活便捷的通过yml文件配置定时任务的方式  地址: GitHub-BootQuartzYml</strong></p><p><strong>以下是yml配置文件配置定时任务的例子</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#通过加载此配置文件实现动态创建Job 旨在通过一种更灵活便捷的方式来控制定时任务</span><br><span class="line"></span><br><span class="line">#20200611 by Demo-Liu</span><br><span class="line"></span><br><span class="line">#jobs:</span><br><span class="line">#  jobList:</span><br><span class="line">#    - jobConf:</span><br><span class="line">#        name: 测试任务                             #任务名 可选</span><br><span class="line">#        job: com.example.demo.quartz.DemoJob  #任务类包路径 必须</span><br><span class="line">#        param:                                     #可为job类注入参数(可配置多项)   可选</span><br><span class="line">#          jtbs: test</span><br><span class="line">#        cron: 10 * * * * ?                         #任务执行频率 必须</span><br><span class="line">#        active: true                               #任务激活状态 必须</span><br><span class="line">jobs:</span><br><span class="line">  jobList:</span><br><span class="line">    - jobConf:</span><br><span class="line">        name: 测试任务</span><br><span class="line">        job: com.example.demo.quartz.DemoJob</span><br><span class="line">        param:</span><br><span class="line">          jtbs: test</span><br><span class="line">          ss: test2</span><br><span class="line">        cron: <span class="number">0</span>/<span class="number">10</span> * * * * ?</span><br><span class="line">        active: <span class="keyword">true</span></span><br><span class="line">    - jobConf:</span><br><span class="line">        name: 测试任务<span class="number">2</span></span><br><span class="line">        job: com.example.demo.quartz.DemoJob2</span><br><span class="line">        param:</span><br><span class="line">          jtbs: test</span><br><span class="line">          ss: test2</span><br><span class="line">        cron: <span class="number">0</span>/<span class="number">10</span> * * * * ?</span><br><span class="line">        active: <span class="keyword">false</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;定时任务 想必做程序的都或多或少的接触过,以便于我们以某个特定的 时间/频率 去执行所需要的程序,Quartz 是一个优秀的框架,可以根据我们的配置将 定时任务的执行 时间/频率 持久化至数据库, 我们通过修改数据库中的任务下次执行时间,达到不需要等到任务配置执行的原始 时
      
    
    </summary>
    
    
      <category term="springboot" scheme="http://wumuwumu.github.io/tags/springboot/"/>
    
      <category term="quartz" scheme="http://wumuwumu.github.io/tags/quartz/"/>
    
  </entry>
  
  <entry>
    <title>框架的实现</title>
    <link href="http://wumuwumu.github.io/2020/08/14/%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://wumuwumu.github.io/2020/08/14/框架的实现/</id>
    <published>2020-08-14T10:39:21.000Z</published>
    <updated>2020-08-14T10:39:21.051Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wumuwumu.github.io/2020/06/05/%E8%BF%90%E7%BB%B4/frp%E6%90%AD%E5%BB%BA/"/>
    <id>http://wumuwumu.github.io/2020/06/05/运维/frp搭建/</id>
    <published>2020-06-05T07:54:05.000Z</published>
    <updated>2020-08-15T07:20:40.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>frp是有个内网穿透的工具，分为客户端和服务端。客户端的程序名称是frpc，服务端的程序名称是frps。</p><h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// lorawan gateway 下载mipsle版本</span><br><span class="line">https://github.com/fatedier/frp/releases</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span>   # 用于与客户端之间通信</span><br></pre></td></tr></table></figure><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure><h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><h2 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h2><p>详细看<a href="https://github.com/fatedier/frp/blob/master/README_zh.md#dashboard" target="_blank" rel="noopener">https://github.com/fatedier/frp/blob/master/README_zh.md#dashboard</a></p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="comment"># frp multi user 插件</span></span><br><span class="line"><span class="attr">user</span> = user1</span><br><span class="line"><span class="attr">meta_token</span> = <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = www.yourdomain.com</span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br></pre></td></tr></table></figure><h2 id="运行程序-1"><a href="#运行程序-1" class="headerlink" title="运行程序"></a>运行程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure><h2 id="openwrt开机启动"><a href="#openwrt开机启动" class="headerlink" title="openwrt开机启动"></a>openwrt开机启动</h2><ol><li><p>配置服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">## /etc/init.d/frpc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#!/bin/sh /etc/rc.common</span><br><span class="line"># &quot;new&quot; style init script</span><br><span class="line"># Look at /lib/functions/service.sh on a running system for explanations of what other SERVICE_</span><br><span class="line"># options you can use, and when you might want them.</span><br><span class="line"></span><br><span class="line">START=80</span><br><span class="line">APP=frpc</span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">      service_start /usr/sbin/$APP -c /etc/frpc.ini &gt; /usr/frpc.log &amp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop() &#123;</span><br><span class="line">        service_stop /usr/sbin/$APP</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/frpc</span><br><span class="line">/etc/init.d/frpc enable</span><br><span class="line">/etc/init.d/frpc start</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h1&gt;&lt;p&gt;frp是有个内网穿透的工具，分为客户端和服务端。客户端的程序名称是frpc，服务端的程序名称是frps。&lt;/p&gt;
&lt;h1 id=&quot;服务器&quot;&gt;
      
    
    </summary>
    
    
      <category term="frp" scheme="http://wumuwumu.github.io/tags/frp/"/>
    
  </entry>
  
</feed>
